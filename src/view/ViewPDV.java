/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.ControllerProdutos;
import controller.ControllerVendas;
import controller.ControllerVendasProdutos;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import model.ModelProduto;
import model.ModelProdutosDaVenda;
import model.ModelSessaoUsuario;
import model.ModelVendas;
import util.BLDatas;
import util.Calculos;

/**
 *
 * @author Darlan
 */
public class ViewPDV extends javax.swing.JFrame {

    ModelProduto modelProdutos = new ModelProduto();
    ModelVendas modelVendas = new ModelVendas();
    ModelProdutosDaVenda modelVendasProdutos = new ModelProdutosDaVenda();
    ModelSessaoUsuario modelSessaoUsuario = new ModelSessaoUsuario();
    ArrayList<ModelProdutosDaVenda> listaModelVendasProdutos = new ArrayList<>();
    ArrayList<ModelProduto> listaModelProdutos = new ArrayList<>();
    ControllerProdutos controllerProdutos = new ControllerProdutos();
    ControllerVendas controllerVendas = new ControllerVendas();
    ControllerVendasProdutos controllerVendasProdutos = new ControllerVendasProdutos();
    BLDatas blDatas = new BLDatas();
    private ViewPagamentoPDV viewPagamentoPDV;
    Calculos vender = new Calculos();

    JFileChooser arqEscolhido = new JFileChooser();
    File ultimaPasta = new File("c:/");
    File logoDoCliente = new File("C:/SSDprojeto/src/imagens/logoCliente.jpg");
    File logoDaEmpresa = new File("C:/SSDprojeto/src/imagens/logo da empresa.jpg");
    int quantidade = 1; // Quantidade de produtos a ser vendida, inicia com 1 e muda ao pressionar a tecla de comando F3
    KeyAdapter acaodobotao = new java.awt.event.KeyAdapter() {

        @Override
        public void keyReleased(KeyEvent e) {
            super.keyReleased(e); //To change body of generated methods, choose Tools | Templates.
            System.out.println("pressionou '" + KeyEvent.getKeyText(e.getKeyCode()) + "'");
        }

    };

    /**
     * Creates new form ViewPDV
     */
    public ViewPDV() {
        setExtendedState(MAXIMIZED_BOTH);
        initComponents();
        setLocationRelativeTo(null);
        jTfCodigoProduto.requestFocus();
        setarOperador();
        this.viewPagamentoPDV = new ViewPagamentoPDV(this, true);
        mudarLogo();
        limparFormulario();

        this.addKeyListener(acaodobotao);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            @Override
            public void componentResized(java.awt.event.ComponentEvent evt) {
                mudarLogo();
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel1 = new java.awt.Panel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLOperador = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jlSatusCaixa = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jtfValorBruto = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        panel3 = new java.awt.Panel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTProdutos = new javax.swing.JTable();
        jTfCodigoProduto = new javax.swing.JFormattedTextField();
        jPanel3 = new javax.swing.JPanel();
        jlLogo = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jmiSair = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jmiExcluir = new javax.swing.JMenuItem();
        jmiQuantidade = new javax.swing.JMenuItem();
        jmiFinalizarVendas = new javax.swing.JMenuItem();
        jmiPesquisarProdutos = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("PDV");
        setBackground(new java.awt.Color(119, 187, 153));
        setName("Janela PDV"); // NOI18N
        setType(java.awt.Window.Type.POPUP);

        panel1.setBackground(new java.awt.Color(119, 187, 153));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(240, 240, 240), 1, true));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Caixa:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("01");
        jLabel4.setAutoscrolls(true);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Operador:");

        jLOperador.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLOperador.setText("Operador");
        jLOperador.setAutoscrolls(true);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("Status:");

        jlSatusCaixa.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jlSatusCaixa.setText("Caixa livre");
        jlSatusCaixa.setAutoscrolls(true);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlSatusCaixa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLOperador, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLOperador))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jlSatusCaixa))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(240, 240, 240), 1, true));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setText("Valor Bruto:");

        jtfValorBruto.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setText("Comandos:");

        jLabel10.setText("F3 - QUANTIDADE");

        jLabel11.setText("F4 - FINALIZAR VENDA");

        jLabel12.setText("F5 - PESQUISAR PRODUTO");

        jLabel13.setText("F6 - SAIR");

        jLabel14.setText("F2 - EXCLUIR PRODUTO");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(89, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(79, 79, 79))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtfValorBruto)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(78, 78, 78)
                                .addComponent(jLabel9))
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfValorBruto, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 173, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel13)
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        panel3.setBackground(new java.awt.Color(119, 187, 153));

        jTProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "iten", "Código", "Nome", "Quantidade", "Valor Unit", "Valor Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTProdutos.setMinimumSize(new java.awt.Dimension(0, 0));
        jScrollPane1.setViewportView(jTProdutos);
        if (jTProdutos.getColumnModel().getColumnCount() > 0) {
            jTProdutos.getColumnModel().getColumn(0).setMinWidth(5);
            jTProdutos.getColumnModel().getColumn(0).setPreferredWidth(5);
            jTProdutos.getColumnModel().getColumn(1).setMinWidth(5);
            jTProdutos.getColumnModel().getColumn(1).setPreferredWidth(5);
            jTProdutos.getColumnModel().getColumn(3).setMinWidth(5);
            jTProdutos.getColumnModel().getColumn(3).setPreferredWidth(5);
            jTProdutos.getColumnModel().getColumn(4).setMinWidth(5);
            jTProdutos.getColumnModel().getColumn(4).setPreferredWidth(5);
            jTProdutos.getColumnModel().getColumn(5).setMinWidth(5);
            jTProdutos.getColumnModel().getColumn(5).setPreferredWidth(5);
        }

        jTfCodigoProduto.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        jTfCodigoProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTfCodigoProdutoKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout panel3Layout = new javax.swing.GroupLayout(panel3);
        panel3.setLayout(panel3Layout);
        panel3Layout.setHorizontalGroup(
            panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addComponent(jTfCodigoProduto, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        panel3Layout.setVerticalGroup(
            panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 419, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTfCodigoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jlLogo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/logoCliente.jpg"))); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jlLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(jlLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        jMenu1.setText("Arquivo");

        jmiSair.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F6, 0));
        jmiSair.setText("Sair");
        jmiSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiSairActionPerformed(evt);
            }
        });
        jMenu1.add(jmiSair);

        jMenuItem1.setText("Configurações");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Comandos");

        jmiExcluir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F2, 0));
        jmiExcluir.setText("Excluir");
        jmiExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiExcluirActionPerformed(evt);
            }
        });
        jMenu2.add(jmiExcluir);

        jmiQuantidade.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F3, 0));
        jmiQuantidade.setText("Quantidade");
        jmiQuantidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiQuantidadeActionPerformed(evt);
            }
        });
        jMenu2.add(jmiQuantidade);

        jmiFinalizarVendas.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, 0));
        jmiFinalizarVendas.setText("Finalizar Vendas");
        jmiFinalizarVendas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiFinalizarVendasActionPerformed(evt);
            }
        });
        jMenu2.add(jmiFinalizarVendas);

        jmiPesquisarProdutos.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
        jmiPesquisarProdutos.setText("Pesquisar Produtos");
        jmiPesquisarProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiPesquisarProdutosActionPerformed(evt);
            }
        });
        jMenu2.add(jmiPesquisarProdutos);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(10, 10, 10))
        );

        jPanel3.getAccessibleContext().setAccessibleName("");
        jPanel3.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jmiFinalizarVendasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiFinalizarVendasActionPerformed
        // TODO add your handling code here:
        double valorVenda = Double.parseDouble(jtfValorBruto.getText());

        if (valorVenda > 0) {
            viewPagamentoPDV = new ViewPagamentoPDV(this, true);
            viewPagamentoPDV.setValorTotal(Float.parseFloat(jtfValorBruto.getText())); //Lança o valor bruto da venda na outra janela, a janela de pagamento
            viewPagamentoPDV.setTextFildValorTotal();//Comando para atribuir o valor total ao atributo valorTotal na janelade pagamento
            viewPagamentoPDV.setVisible(true);//Exibe a Janela de pagamento

            //Os próximos comandos só vão acontecer após fechar a janela de pagamento
            if (viewPagamentoPDV.isStatusPagamento()) {
                salvarVenda();
            } else {
                JOptionPane.showMessageDialog(this, "Atenção, a venda ainda está em aberto.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "O Valor da venda está zerado. \n Se o erro persistir o código acima deverá ser consultado na SSD", "Código de erro : 417", JOptionPane.WARNING_MESSAGE);
        }


    }//GEN-LAST:event_jmiFinalizarVendasActionPerformed

    private void jmiPesquisarProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiPesquisarProdutosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jmiPesquisarProdutosActionPerformed

    private void jmiQuantidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiQuantidadeActionPerformed
        // TODO add your handling code here:
        quantidade = Integer.parseInt(JOptionPane.showInputDialog("informe a quantidade"));
    }//GEN-LAST:event_jmiQuantidadeActionPerformed

    private void jmiSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiSairActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jmiSairActionPerformed

    private void jmiExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiExcluirActionPerformed
        // TODO add your handling code here:

        int quantLinha = jTProdutos.getRowCount();//tamanho da minha tabela
        if (quantLinha < 1) {
            JOptionPane.showMessageDialog(this, "Ainda não foi inserido nenhum produto", "Atenção", JOptionPane.INFORMATION_MESSAGE);
        } else {
            DefaultTableModel model = (DefaultTableModel) jTProdutos.getModel();
            try {
                int linha = Integer.parseInt(JOptionPane.showInputDialog("Informe o item que de deseja excluir"));
                model.removeRow(linha - 1);
                listaModelProdutos.remove(linha - 1);
                System.out.println("Lista de produtos: " + listaModelProdutos.toString());
            } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {
                JOptionPane.showMessageDialog(this, "Nenhum produto excluído, insira o número do item que será excluído", "Erro", JOptionPane.ERROR_MESSAGE);
            }

            jtfValorBruto.setText(String.valueOf(somaValorTotal()));//Recalcula o valor total e atribui ao JTF

            for (int i = 0; i < quantLinha - 1; i++) {
                model.setValueAt(i + 1, i, 0);
            }
        }

    }//GEN-LAST:event_jmiExcluirActionPerformed

    private void jTfCodigoProdutoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTfCodigoProdutoKeyReleased
        // TODO add your handling code here:
        //pegarConteudo(evt);
        adicionarProduto(evt);

    }//GEN-LAST:event_jTfCodigoProdutoKeyReleased

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        escolherLogo();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void adicionarProduto(KeyEvent e) {
        boolean salvou = false;
        DefaultTableModel model = (DefaultTableModel) jTProdutos.getModel();

        if (e.getKeyCode() == KeyEvent.VK_ENTER) {

            //Se o caixa estiver em uso significa que já foi criada a lista de produtos.
            //Então não será necessário criar seguindo para próximo if
            if (!jlSatusCaixa.getText().equals("Caixa Ocupado")) {

                listaModelProdutos = new ArrayList<>();
            }
            //Verifica se o campo código do produto não está vazio após pressionar enter
            if (!jTfCodigoProduto.getText().isEmpty()) {

                try {
                    modelProdutos = controllerProdutos.retornarProdutoController(Integer.parseInt(jTfCodigoProduto.getText()));
                    //se o produto estiver cadastrado no sistema ele vai mudar o status do caixa para ocupado
                    jlSatusCaixa.setText("Caixa Ocupado");
                    //incrementa os itens na tabela

                    /**
                     * Se a tabela estiver vazia ele adiciona o produto sem
                     * restrições
                     */
                    if (model.getRowCount() <= 0) {
                        model.addRow(new Object[]{
                            model.getRowCount() + 1,//Número do item, primeira coluna da tabela
                            modelProdutos.getIdProduto(),//codigo do produto
                            modelProdutos.getProNome(),//nome do produto
                            quantidade,//quantidade de produtos vendidos
                            modelProdutos.getProValor(),//valor unitário
                            modelProdutos.getProValor() * quantidade // valor total dos produtos
                        });
                        jTfCodigoProduto.setText("");
                        salvou = true;
                        System.out.println("Não tinha linha, adicionando linha com produto 1");

                    }
                    /**
                     * Se a tabela NÃO estiver vazia, ele verifica se o produto
                     * existe
                     */
                    if (!salvou) {
                        for (int i = 0; i < model.getRowCount(); i++) {

                            int produtoBuscado = Integer.parseInt(model.getValueAt(i, 0) + "");

                            /**
                             * Verifica se o produto existe na tabela, se ele
                             * existir incrementa, caso contrário ele continua
                             * no ELSE
                             */
                            if (produtoBuscado == Integer.parseInt(jTfCodigoProduto.getText())) {

                                int quantAtual = Integer.parseInt(model.getValueAt(i, 3) + "");
                                int quantNova = quantAtual + quantidade;
                                double preco = Double.parseDouble(model.getValueAt(i, 4) + "");
                                model.setValueAt(preco, i, 4);
                                model.setValueAt(quantNova, i, 3);
                                model.setValueAt(quantNova * preco, i, 5);
                                jTfCodigoProduto.setText("");
                                salvou = true;
                                System.out.println("Incrementou a quantidade de produtos ");

                            }

                            if (!salvou) {
                                model.addRow(new Object[]{
                                    model.getRowCount() + 1,//Número do item, primeira coluna da tabela
                                    modelProdutos.getIdProduto(),//codigo do produto
                                    modelProdutos.getProNome(),//nome do produto
                                    quantidade,//quantidade de produtos vendidos
                                    modelProdutos.getProValor(),//valor unitário
                                    modelProdutos.getProValor() * quantidade // valor total dos produtos
                                });
                                jTfCodigoProduto.setText("");
                                salvou = true;
                                System.out.println("Lista tem produtos mas o produto adicionado é novo, adicionando linha com produto 2");

                            }

                        }

                        modelProdutos.setProQuantidadeVendida(quantidade);
                        jtfValorBruto.setText(String.valueOf(somaValorTotal()));//preenche o campo Valor total
                        jTfCodigoProduto.setText("");//limpa o campo texto após pressionar ENTER
                        quantidade = 1;//após inserir o produto ele muda a quantidade para 1, caso a quantidade tenha sido alterada
                        listaModelProdutos.add(modelProdutos);
                        //System.out.println("Lista de produtos: "+listaModelProdutos.toString());

                    }
                } catch (NullPointerException | NumberFormatException ex) {
                    JOptionPane.showMessageDialog(this, "Produto não cadastrado no sistema", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                    jTfCodigoProduto.setText("");//limpa o campo texto após pressionar ENTER
                }
            }

        }
    }

    /**
     * Todo comando para pegar o conteúdo no banco de dados, exemplo se eu
     * digitar o id 30 ele pega no banco de dados o produto com este ID e lança
     * na tabela de venda
     *
     * @param e
     */
    private void pegarConteudo(java.awt.event.KeyEvent e) {
        DefaultTableModel model = (DefaultTableModel) jTProdutos.getModel();

        if (e.getKeyCode() == KeyEvent.VK_ENTER) {

            //Se o caixa estiver em uso significa que já foi criada a lista de produtos.
            //Então não será necessário criar seguindo para próximo if
            if (!jlSatusCaixa.getText().equals("Caixa Ocupado")) {

                listaModelProdutos = new ArrayList<>();
            }
            //Verifica se o campo código do produto não está vazio após pressionar enter
            if (!jTfCodigoProduto.getText().isEmpty()) {

                try {
                    modelProdutos = controllerProdutos.retornarProdutoController(Integer.parseInt(jTfCodigoProduto.getText()));
                    //se o produto estiver cadastrado no sistema ele vai mudar o status do caixa para ocupado
                    jlSatusCaixa.setText("Caixa Ocupado");
                    //incrementa os itens na tabela
                    model.addRow(new Object[]{//cria uma nova linha com as colunas a seguir
                        model.getRowCount() + 1,//Número do item, primeira coluna da tabela
                        modelProdutos.getIdProduto(),//codigo do produto
                        modelProdutos.getProNome(),//nome do produto
                        quantidade,//quantidade de produtos vendidos
                        modelProdutos.getProValor(),//valor unitário
                        modelProdutos.getProValor() * quantidade // valor total dos produtos
                    });
                    modelProdutos.setProQuantidadeVendida(quantidade);
                    jtfValorBruto.setText(String.valueOf(somaValorTotal()));//preenche o campo Valor total
                    jTfCodigoProduto.setText("");//limpa o campo texto após pressionar ENTER
                    quantidade = 1;//após inserir o produto ele muda a quantidade para 1, caso a quantidade tenha sido alterada
                    listaModelProdutos.add(modelProdutos);
                    System.out.println("Lista de produtos: " + listaModelProdutos.toString());

                } catch (NullPointerException | NumberFormatException ex) {
                    JOptionPane.showMessageDialog(this, "Produto não cadastrado no sistema", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                    jTfCodigoProduto.setText("");//limpa o campo texto após pressionar ENTER
                }
            }

        }

    }

    /**
     * Soma o total dos produtos na tabela JTpRODUTOS e retorna um o total dos
     * produtos é um comando com retorno do tipo float
     *
     * @return Total
     */
    private float somaValorTotal() {
        float soma = 0, valor = 0;
        int cont = jTProdutos.getRowCount();//quantidade de linhas da minha tabela
        for (int i = 0; i < cont; i++) {
            valor = Float.parseFloat(String.valueOf(jTProdutos.getValueAt(i, 5)));//Converte a string da coluna 6 em float
            soma += valor;

        }

        return soma;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewPDV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewPDV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewPDV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewPDV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewPDV().setVisible(true);
            }
        });
    }

    /**
     * Limpa os dados da minha tela de cadastro de vendas, usado para zerar a
     * venda e registrar uma nova
     */
    private void limparFormulario() {
        jTfCodigoProduto.setText(""); //zera o código do produto
        DefaultTableModel modelo = (DefaultTableModel) jTProdutos.getModel();
        modelo.setNumRows(0);//Limpa tabela antes de carregar
        jtfValorBruto.setText("0.0"); //zera o valor bruto
        jTfCodigoProduto.requestFocus();// muda o foco do cursor para o código de barras
        jlSatusCaixa.setText("Caixa Livre");//Define o status do caixa como Ocupado
        viewPagamentoPDV.setStatusPagamento(false);
    }

    private void setarOperador() {
        jLOperador.setText(modelSessaoUsuario.nome);
    }

    private void salvarVenda() {
        int codigoProduto = 0;
        int codigoVenda = 0;
        modelVendas = new ModelVendas();//zera para não receber nenhum lixo de vendas anteriores
        modelVendas.setCliente(1);//seleciona o cliente número 1 definido no banco de dados como balcão
        //Salva a data da venda e já converte para o formato que o banco de dados aceita, formato DatesUS
        try {
            modelVendas.setVenDataVenda(blDatas.converterDataParaDateUS(new java.util.Date(System.currentTimeMillis())));
        } catch (Exception e) {
            e.printStackTrace();
        }
        modelVendas.setVenValorBruto(Double.parseDouble(viewPagamentoPDV.getValorTotal() + ""));//salva o Valor bruto da venda no model
        modelVendas.setVenDesconto(Double.parseDouble(viewPagamentoPDV.getDesconto() + ""));//Salva o valor do desconto
        modelVendas.setVenValorLiquido(Double.parseDouble(viewPagamentoPDV.getTotalAPagar() + ""));//salva o Valor liquido da venda no model
        modelVendas.setFormaPagamento(Integer.parseInt(viewPagamentoPDV.getFormaPagamento() + ""));//Salva a forma de pagamento no banco de dados

        //Salvar venda
        codigoVenda = controllerVendas.salvarVendasController(modelVendas);

        int cont = jTProdutos.getRowCount();
        //inicio, zera todas as listas para fazer uma nova venda.
        listaModelVendasProdutos = new ArrayList<>();
        listaModelProdutos = new ArrayList<>();
        for (int i = 0; i < cont; i++) {
            codigoProduto = (int) jTProdutos.getValueAt(i, 1);

            modelVendasProdutos = new ModelProdutosDaVenda();//Cria um novo ModelVendas para não ficar nehum lixo das vendas anteriores
            modelProdutos = new ModelProduto();//Cria um novo ModelProduto para não ficar nehum lixo das vendas anteriores
            modelVendasProdutos.setProduto(codigoProduto);
            modelVendasProdutos.setIdDaVenda(codigoVenda);
            modelVendasProdutos.setVenProValor((double) jTProdutos.getValueAt(i, 4));//Busca o valor unitário do produto na tabela jtProdutos
            modelVendasProdutos.setVenProQuantidadeVendida(Integer.parseInt(jTProdutos.getValueAt(i, 3).toString()));//Busca a quantidade de produtos na tabela jtProdutos
            //produtos da venda
            modelProdutos.setIdProduto(codigoProduto);//Salva o id do produto deste cliclo de for no modelProdutos
            //Atualiza o estoque do produto abatendo o que foi vendido
            modelProdutos.setProEstoque(
                    controllerProdutos.retornarProdutoController(codigoProduto).getProEstoque()//
                    - Integer.parseInt(jTProdutos.getValueAt(i, 3).toString()));
            listaModelVendasProdutos.add(modelVendasProdutos);
            listaModelProdutos.add(modelProdutos);
        }
        //Salvar lista de protudos da vendas no banco de dados
        if (controllerVendasProdutos.salvarVendasProdutosController(listaModelVendasProdutos)) {
            //Atualiza o estoque estoque dos produtos da venda atual
            controllerProdutos.alterarEstoqueProdutoController(listaModelProdutos);
            //Mostra na tela uma mensagem com os dadosda venda que foi realizada
            JOptionPane.showMessageDialog(this, ""
                    + "Valor da compra R$: " + viewPagamentoPDV.getValorTotal() + "\n"
                    + "Valor Desconto R$: " + viewPagamentoPDV.getDesconto() + "\n"
                    + "Valor a pagar R$: " + viewPagamentoPDV.getTotalAPagar() + "\n"
                    + "Valor Recebido R$: " + viewPagamentoPDV.getValorRecebido() + "\n \n"
                    + "Troco R$: " + viewPagamentoPDV.getTroco(), "VENDA REALIZADA COM SUCESSO", JOptionPane.INFORMATION_MESSAGE);
            limparFormulario();
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao salvar produtos, cunsulta a SSD e informe o código de erro PDV-642", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void mudarLogo() {
        if (logoDoCliente.exists()) {
            ImageIcon imagem = new ImageIcon(logoDoCliente.getAbsolutePath());
            imagem = ajustarImgEmLabel(imagem,jlLogo);
            jlLogo.setIcon(imagem);
            ultimaPasta = new File(logoDoCliente.getAbsolutePath());

        } else {
            ImageIcon imagem = new ImageIcon(logoDaEmpresa.getAbsolutePath());
            imagem = ajustarImgEmLabel(imagem,jlLogo);
            jlLogo.setIcon(imagem);
            ultimaPasta = new File(logoDaEmpresa.getAbsolutePath());
        }
    }

    private void copiarArquivo(File fonte, File destino) throws IOException {

        OutputStream out;
        try (InputStream in = new FileInputStream(fonte)) {
            out = new FileOutputStream(destino);
            byte[] buf = new byte[1024];
            int len;
            while ((len = in.read(buf)) > 0) {
                out.write(buf, 0, len);
            }
        }
        out.close();
    }

    /**
     * Este método redimensiona a imagem considerando o tamanho da label. Ele
     * ajusta automaticamente ao ponto menor, supondo que a imagem seja mais
     * larga que a label. O método reduz a escala da imagem para se encaixar na
     * largura. E se a largura for menor ele se ajusta também a altura sem
     * perder a proporção.
     *
     * @param pImagem
     * @return
     */
    public ImageIcon ajustarImgEmLabel(ImageIcon pImagem,JLabel plogo) {

        double larguraDaImagem = pImagem.getIconHeight();
        double alturaDaImagem = pImagem.getIconWidth();

        double larguraDaLabel = plogo.getWidth();
        double alturaDaLabel = plogo.getHeight();
        
        //Encontra a distancia de um ponto a outro da imágem cruzando pelo centro.
        double distanciaCentral = Math.sqrt(larguraDaImagem + alturaDaImagem); // distanciaCentral = raiz de lado vezes altura
        double percentReducaoPelaLargura = (larguraDaLabel * distanciaCentral) / alturaDaImagem; //regra de 3 para achar o percentual de redução x = largura atual * distanciaCentral / largura da imagem
        double novaAlturaImagem = (percentReducaoPelaLargura * larguraDaImagem) / distanciaCentral; //regra de 3

        larguraDaImagem = novaAlturaImagem;
        alturaDaImagem = larguraDaLabel;

        if (novaAlturaImagem > alturaDaLabel) {
            distanciaCentral = Math.sqrt(larguraDaImagem + alturaDaImagem); // distanciaCentral = raiz de lado vezes altura
            double hipotenusaReduzidaPelaAlturaDaLabel = (alturaDaLabel * distanciaCentral) / larguraDaImagem; //regra de 3 para achar o percentual de redução x = largura atual * distanciaCentral / largura da imagem
            double novaLargura = (hipotenusaReduzidaPelaAlturaDaLabel * alturaDaImagem) / distanciaCentral; //regra de 3
            larguraDaImagem = alturaDaLabel;
            alturaDaImagem = novaLargura;
        } else {
            distanciaCentral = Math.sqrt(larguraDaImagem + alturaDaImagem); // distanciaCentral = raiz de lado vezes altura
            percentReducaoPelaLargura = (larguraDaLabel * distanciaCentral) / alturaDaImagem; //regra de 3 para achar o percentual de redução x = largura atual * distanciaCentral / largura da imagem
            novaAlturaImagem = (percentReducaoPelaLargura * larguraDaImagem) / distanciaCentral; //regra de 3

        }

        pImagem.setImage(pImagem.getImage().getScaledInstance((int) alturaDaImagem, (int) larguraDaImagem, 1));

        return pImagem;
    }

    public void escolherLogo() {

        arqEscolhido.setFileSelectionMode(JFileChooser.FILES_ONLY);
        FileNameExtensionFilter extensãoDasImagens = new FileNameExtensionFilter("Arquivos JPG , PNG e BMP", "jpg", "png", "bmp");
        arqEscolhido.addChoosableFileFilter(extensãoDasImagens);
        arqEscolhido.setAcceptAllFileFilterUsed(false);

        try {
            String ca = arqEscolhido.getSelectedFile().getAbsolutePath();
            ultimaPasta = new File(ca);
            arqEscolhido.setCurrentDirectory(ultimaPasta);
        } catch (NullPointerException e) {
            arqEscolhido.setCurrentDirectory(ultimaPasta);
        }

        if (arqEscolhido.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            String caminhoDoArquivo = arqEscolhido.getSelectedFile().getAbsolutePath();
            ImageIcon imagem = new ImageIcon(caminhoDoArquivo);
            imagem = ajustarImgEmLabel(imagem,jlLogo);

            jlLogo.setIcon(imagem);
            File file = new File(caminhoDoArquivo);
            arqEscolhido.setCurrentDirectory(file);
            try {

                copiarArquivo(file, logoDoCliente);
            } catch (IOException ex) {
                System.out.println(ex.getMessage());
            }

        } else {
            mudarLogo();
        }

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLOperador;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTProdutos;
    private javax.swing.JFormattedTextField jTfCodigoProduto;
    private javax.swing.JLabel jlLogo;
    private javax.swing.JLabel jlSatusCaixa;
    private javax.swing.JMenuItem jmiExcluir;
    private javax.swing.JMenuItem jmiFinalizarVendas;
    private javax.swing.JMenuItem jmiPesquisarProdutos;
    private javax.swing.JMenuItem jmiQuantidade;
    private javax.swing.JMenuItem jmiSair;
    private javax.swing.JTextField jtfValorBruto;
    private java.awt.Panel panel1;
    private java.awt.Panel panel3;
    // End of variables declaration//GEN-END:variables
}
