/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package view;

import controller.ControllerCliente;
import controller.ControllerProdutos;
import controller.ControllerProdutosVendasProdutos;
import controller.ControllerVendas;
import controller.ControllerVendasCliente;
import controller.ControllerVendasProdutos;
import java.awt.event.KeyEvent;
import java.text.DecimalFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.ModelCliente;
import model.ModelProduto;
import model.ModelProdutosVendasProdutos;
import model.ModelVendas;
import model.ModelVendasCliente;
import model.ModelProdutosDaVenda;
import util.BLDatas;
import util.Calculos;
import util.Formatador;

/**
 *
 * @author user
 */
public class ViewVendasJDialog extends javax.swing.JDialog {
    
    

    ControllerCliente controllerCliente = new ControllerCliente();
    ModelCliente modelCliente = new ModelCliente();
    ArrayList<ModelCliente> listaModelClientes = new ArrayList<>();
    ControllerProdutos controllerProdutos = new ControllerProdutos();
    ModelProduto modelProdutos = new ModelProduto(); //Cria um objeto do tipo produto
    ArrayList<ModelProduto> listaModelProdutos = new ArrayList<>();
    ArrayList<ModelVendasCliente> listaModelVendasClientes = new ArrayList<>();
    ControllerVendasCliente controllerVendasCliente = new ControllerVendasCliente();
    ControllerVendas controllerVendas = new ControllerVendas();
    ModelVendas modelVendas = new ModelVendas();
    BLDatas blDatas = new BLDatas();
    ControllerVendasProdutos controllerVendasProdutos = new ControllerVendasProdutos();
    ModelProdutosDaVenda modelVendasProdutos = new ModelProdutosDaVenda();
    ArrayList<ModelProdutosDaVenda> listaModelVendasProdutos = new ArrayList<>();
    ControllerProdutosVendasProdutos controllerProdutosVendasProdutos = new ControllerProdutosVendasProdutos();
    ModelProdutosVendasProdutos modelProdutosVendasProdutos = new ModelProdutosVendasProdutos();
    ArrayList<ModelProdutosVendasProdutos> listaModelProdutosVendasprodutos = new ArrayList<>();
    Formatador formatador = new Formatador();
    Calculos vender = new Calculos();
    String alterarSalvar = "salvar";

    /**
     * Creates new form ViewVendasJDialog
     */
    public ViewVendasJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        listarClientes();
        listarProdutos();
        setLocationRelativeTo(null);
        carregarVendas();
        preencherCodigoClientePeloCombobox();
        preencherCodigoProdutoPeloCombobox();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jtpViewVendas = new javax.swing.JTabbedPane();
        jPCadastro = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtProdutosVenda = new javax.swing.JTable();
        jtfCodigoProduto = new javax.swing.JTextField();
        jcbNomeCliente = new componentes.UJComboBox();
        jtfTroco = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jtfValorTotal = new javax.swing.JTextField();
        jbSalvar = new javax.swing.JButton();
        jbAdicionar = new javax.swing.JButton();
        jtfNumeroVenda = new javax.swing.JTextField();
        jbRemoverProdutos = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jlStatus = new javax.swing.JLabel();
        jcbNomeProduto = new componentes.UJComboBox();
        jSeparator1 = new javax.swing.JSeparator();
        jspQuantidade = new javax.swing.JSpinner();
        jLabel10 = new javax.swing.JLabel();
        jbNovo = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jtfDesconto = new javax.swing.JTextField();
        jtfCodigoCliente = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jtfRecebido = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jPConsulta = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jtfPesquisa = new javax.swing.JTextField();
        jbPesquisar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtVendas = new javax.swing.JTable();
        jbExcluir = new javax.swing.JButton();
        jbAlterar = new javax.swing.JButton();
        jbNovo1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtVisualizarVenda = new javax.swing.JTable();
        jtfTotalBruto = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jtfvisualizarDesconto = new javax.swing.JFormattedTextField();
        jtfTotalLiquido = new javax.swing.JFormattedTextField();
        jLabel15 = new javax.swing.JLabel();
        JbVisualizarVenda = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jtProdutosVenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cod. Prod.", "Nome Produto", "Quant.", "Valor Un.", "Valor Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtProdutosVenda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtProdutosVendaKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jtProdutosVenda);

        jtfCodigoProduto.setEnabled(false);
        jtfCodigoProduto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfCodigoProdutoFocusLost(evt);
            }
        });
        jtfCodigoProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfCodigoProdutoKeyPressed(evt);
            }
        });

        jcbNomeCliente.setAutocompletar(true);
        jcbNomeCliente.setEnabled(false);
        jcbNomeCliente.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                jcbNomeClientePopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        jcbNomeCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbNomeClienteActionPerformed(evt);
            }
        });

        jtfTroco.setEditable(false);
        jtfTroco.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jtfTroco.setForeground(new java.awt.Color(13, 143, 57));
        jtfTroco.setEnabled(false);
        jtfTroco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfTrocoActionPerformed(evt);
            }
        });

        jLabel2.setText("Nome Cliente");

        jLabel3.setText("NÃºmero da Venda:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Valor total:");

        jLabel4.setText("Cod. Prod.");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("Valor recebido:");

        jtfValorTotal.setEditable(false);
        jtfValorTotal.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jtfValorTotal.setForeground(new java.awt.Color(13, 143, 57));
        jtfValorTotal.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jtfValorTotal.setEnabled(false);

        jbSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/iconfinder_floppy_285657.png"))); // NOI18N
        jbSalvar.setText("Salvar Pedido");
        jbSalvar.setEnabled(false);
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });

        jbAdicionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/iconfinder_sign-add_299068.png"))); // NOI18N
        jbAdicionar.setText("ADD. Produto");
        jbAdicionar.setEnabled(false);
        jbAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAdicionarActionPerformed(evt);
            }
        });
        jbAdicionar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbAdicionarKeyPressed(evt);
            }
        });

        jtfNumeroVenda.setEditable(false);
        jtfNumeroVenda.setBackground(new java.awt.Color(204, 255, 204));
        jtfNumeroVenda.setEnabled(false);
        jtfNumeroVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfNumeroVendaActionPerformed(evt);
            }
        });

        jbRemoverProdutos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/iconfinder_trashcan_299071.png"))); // NOI18N
        jbRemoverProdutos.setText("Remover Produto");
        jbRemoverProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRemoverProdutosActionPerformed(evt);
            }
        });

        jbCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/iconfinder_sign-error_299045.png"))); // NOI18N
        jbCancelar.setText("Cancelar Pedido");
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        jLabel9.setText("Nome do Produto:");

        jlStatus.setBackground(new java.awt.Color(204, 204, 204));
        jlStatus.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jlStatus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlStatus.setBorder(javax.swing.BorderFactory.createTitledBorder("Status"));

        jcbNomeProduto.setAutocompletar(true);
        jcbNomeProduto.setEnabled(false);
        jcbNomeProduto.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                jcbNomeProdutoPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        jcbNomeProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jcbNomeProdutoKeyPressed(evt);
            }
        });

        jspQuantidade.setEnabled(false);
        jspQuantidade.setValue(1);
        jspQuantidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jspQuantidadeKeyPressed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("PEDIDO DO CLIENTE SELECIONADO");

        jbNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/iconfinder_sign-add_299068.png"))); // NOI18N
        jbNovo.setText("Novo");
        jbNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNovoActionPerformed(evt);
            }
        });

        jLabel13.setText("Quantidade:");

        jtfDesconto.setEnabled(false);
        jtfDesconto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfDescontoFocusLost(evt);
            }
        });
        jtfDesconto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfDescontoActionPerformed(evt);
            }
        });
        jtfDesconto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfDescontoKeyReleased(evt);
            }
        });

        jtfCodigoCliente.setEnabled(false);
        jtfCodigoCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfCodigoClienteFocusLost(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Desconto:");

        jtfRecebido.setEnabled(false);
        jtfRecebido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfRecebidoActionPerformed(evt);
            }
        });
        jtfRecebido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfRecebidoKeyReleased(evt);
            }
        });

        jLabel1.setText("CÃ³digo Cli:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setText("Troco:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtfCodigoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jcbNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jtfCodigoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(7, 7, 7)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jcbNomeProduto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(10, 10, 10)))
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addComponent(jspQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jbAdicionar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3)
                            .addComponent(jtfNumeroVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jbCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbRemoverProdutos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbSalvar))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jlStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(196, 196, 196)
                                .addComponent(jbNovo))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jtfTroco, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12)))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(175, 175, 175)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jtfValorTotal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel11)
                                    .addComponent(jtfRecebido, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtfDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbNovo)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfCodigoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfNumeroVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel9)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfCodigoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbAdicionar)
                    .addComponent(jspQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbNomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jlStatus, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                        .addGap(25, 25, 25))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtfRecebido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtfDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfTroco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbSalvar)
                    .addComponent(jbCancelar)
                    .addComponent(jbRemoverProdutos))
                .addContainerGap(132, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPCadastroLayout = new javax.swing.GroupLayout(jPCadastro);
        jPCadastro.setLayout(jPCadastroLayout);
        jPCadastroLayout.setHorizontalGroup(
            jPCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPCadastroLayout.setVerticalGroup(
            jPCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jtpViewVendas.addTab("Cadastro", jPCadastro);

        jLabel8.setText("Buscar venda pelo codigo:");

        jbPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/iconfinder_search_285651.png"))); // NOI18N
        jbPesquisar.setText("Pesquisar");
        jbPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPesquisarActionPerformed(evt);
            }
        });

        jtVendas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nome Cliente", "Data"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jtVendas);

        jbExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/iconfinder_trashcan_299071.png"))); // NOI18N
        jbExcluir.setText("Excluir");
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        jbAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/iconfinder_pencil_285638.png"))); // NOI18N
        jbAlterar.setText("Alterar");
        jbAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlterarActionPerformed(evt);
            }
        });

        jbNovo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/iconfinder_sign-add_299068.png"))); // NOI18N
        jbNovo1.setText("Novo");
        jbNovo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNovo1ActionPerformed(evt);
            }
        });

        jtVisualizarVenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cod. Prod.", "Nome Produto", "Quant.", "Valor Un.", "Valor Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtVisualizarVenda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtVisualizarVendaKeyReleased(evt);
            }
        });
        jScrollPane3.setViewportView(jtVisualizarVenda);

        jtfTotalBruto.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Total Bruto");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setText("Desconto");

        jtfvisualizarDesconto.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));

        jtfTotalLiquido.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setText("Total Liquido");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 642, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(15, 15, 15)
                                .addComponent(jtfTotalBruto, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jtfvisualizarDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jtfTotalLiquido, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jtfTotalBruto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfvisualizarDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfTotalLiquido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addGap(45, 45, 45))
        );

        JbVisualizarVenda.setText("Visualizar venda");
        JbVisualizarVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JbVisualizarVendaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPConsultaLayout = new javax.swing.GroupLayout(jPConsulta);
        jPConsulta.setLayout(jPConsultaLayout);
        jPConsultaLayout.setHorizontalGroup(
            jPConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPConsultaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 662, Short.MAX_VALUE)
                    .addGroup(jPConsultaLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbNovo1))
                    .addGroup(jPConsultaLayout.createSequentialGroup()
                        .addComponent(jtfPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbPesquisar)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPConsultaLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(JbVisualizarVenda)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbExcluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbAlterar))
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPConsultaLayout.setVerticalGroup(
            jPConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPConsultaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jbNovo1)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbPesquisar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbExcluir)
                    .addComponent(jbAlterar)
                    .addComponent(JbVisualizarVenda))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jtpViewVendas.addTab("Consultar / Excluir / Alterar", jPConsulta);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtpViewVendas, javax.swing.GroupLayout.DEFAULT_SIZE, 687, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtpViewVendas, javax.swing.GroupLayout.PREFERRED_SIZE, 782, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

 
    private void editarSelecao() {
        int linhaSelecionada = jtProdutosVenda.getSelectedRow();//linha selecionada na tabela
        int quant = (int) jtProdutosVenda.getValueAt(linhaSelecionada, 2);
        double valor = (double) jtProdutosVenda.getValueAt(linhaSelecionada, 3);
        DefaultTableModel modelo = (DefaultTableModel) jtProdutosVenda.getModel();
        double total = quant * valor;
        modelo.setValueAt(total, linhaSelecionada, 4);

    }

    private void adicionarProduto() {
        int proCodigo = Integer.parseInt(jtfCodigoProduto.getText());
        modelProdutos = new ModelProduto();
        modelProdutos = controllerProdutos.retornarProdutoController(Integer.parseInt(proCodigo + ""));
        int quantidade = Integer.parseInt(jspQuantidade.getValue().toString());
        boolean salvou = false;

        if (jspQuantidade.getValue().equals("")) {
            JOptionPane.showMessageDialog(this, "VocÃª precisa preencher a quantidade de produtos", "AtenÃ§Ã£o", JOptionPane.WARNING_MESSAGE);
        } else {

            DefaultTableModel modelo = (DefaultTableModel) jtProdutosVenda.getModel();
            /**
             * Se a tabela estiver vazia ele adiciona o produto sem restriÃ§Ãµes
             */
            if (modelo.getRowCount() <= 0) {
                modelo.addRow(new Object[]{
                    modelProdutos.getIdProduto(),
                    modelProdutos.getProNome(),
                    quantidade,
                    modelProdutos.getProValor(),
                    quantidade * modelProdutos.getProValor()

                });
                salvou = true;
                System.out.println("NÃ£o tinha linha, adicionando linha com produto ");

            }
            if (!salvou) {
                for (int i = 0; i < modelo.getRowCount(); i++) {

                    int produtoBuscado = Integer.parseInt(modelo.getValueAt(i, 0) + "");

                    /**
                     * Verifica se o produto existe na tabela, se ele existir
                     * incrementa, caso contrÃ¡rio ele continua no ELSE
                     */
                    if (produtoBuscado == proCodigo) {

                        int quantAtual = Integer.parseInt(modelo.getValueAt(i, 2) + "");
                        int quantNova = quantAtual + quantidade;
                        double preco = Double.parseDouble(modelo.getValueAt(i, 3) + "");
                        modelo.setValueAt(preco, i, 3);
                        modelo.setValueAt(quantNova, i, 2);
                        modelo.setValueAt(quantNova * preco, i, 4);

                        salvou = true;
                        System.out.println("Incrementou a quantidade de produtos ");

                    }

                }
                if (!salvou) {
                    modelo.addRow(new Object[]{
                        modelProdutos.getIdProduto(),
                        modelProdutos.getProNome(),
                        quantidade,
                        modelProdutos.getProValor(),
                        quantidade * modelProdutos.getProValor()

                    });
                    salvou = true;
                    System.out.println("NÃ£o tinha linha, adicionando linha com produto ");

                }

            }

            somarValorTotalProdutos();
        }
    }
    
    
    //Preenche os JTF com o cÃ³digo do cliente selecionado no combobox
    private void preencherCodigoClientePeloCombobox() {
        modelCliente = controllerCliente.getClienteController(jcbNomeCliente.getSelectedItem().toString());
        jtfCodigoCliente.setText(String.valueOf(modelCliente.getIdCliente()));
    }

    //Preenche os JTF com o cÃ³digo do produto selecionado no combobox
    private void preencherCodigoProdutoPeloCombobox() {
        modelProdutos = controllerProdutos.retornarProdutoController(jcbNomeProduto.getSelectedItem().toString());
        jtfCodigoProduto.setText(String.valueOf(modelProdutos.getIdProduto()));
    }

    /**
     * Preenche o combobox com todos os clientes do banco de dados
     */
    private void listarClientes() {
        listaModelClientes = controllerCliente.getListaClienteController();
        jcbNomeCliente.removeAllItems();
        for (int i = 0; i < listaModelClientes.size(); i++) {
            jcbNomeCliente.addItem(listaModelClientes.get(i).getCliNome());
        }
    }

    /**
     * Preenche o combobox com todos os produtos do banco de dados
     */
    private void listarProdutos() {
        listaModelProdutos = controllerProdutos.retornarListaProdutoController();
        jcbNomeProduto.removeAllItems();
        for (int i = 0; i < listaModelProdutos.size(); i++) {
            jcbNomeProduto.addItem(listaModelProdutos.get(i).getProNome());
        }
    }

    /**
     * Este comando aplica um desconto ao valor final da venda
     */
    private void aplicarDescontos() {

        try {
            double desconto = formatador.converterVirgulaParaPontoReturn((jtfDesconto.getText()));
            jtfValorTotal.setText(String.valueOf(
                    Double.parseDouble(jtfValorTotal.getText()) - desconto));
        } catch (NumberFormatException e) {
        }

    }

    /**
     * Este comando soma todos os produtos da tabela de venda este comando serve
     * apenas para somar mesmo
     */
    private void somarValorTotalProdutos() {

        double soma = 0, valorPro, total;
        int quantPro;
        int cont = jtProdutosVenda.getRowCount();

        //repete o comando for de soma enquanto ainda existir linhas na tabela
        for (int i = 0; i < cont; i++) {
            quantPro = (int) jtProdutosVenda.getValueAt(i, 2);
            valorPro = (double) jtProdutosVenda.getValueAt(i, 3);
            total = quantPro * valorPro;

            soma = soma + total;

        }

        jtfValorTotal.setText(String.valueOf(soma));
        aplicarDescontos();
        calcularTroco();

    }

    private void calcularTroco() {

        double recebido, troco, total;
        total = Double.parseDouble(jtfValorTotal.getText());
        try {
            recebido = formatador.converterVirgulaParaPontoReturn((jtfRecebido.getText()));

        } catch (NumberFormatException e) {
            jlStatus.setText("Preencha o campo pagamento.");
            recebido = 0;
        }
        troco = recebido - total;
        if (troco >= 0) {
            jtfTroco.setText(String.valueOf("R$" + troco));
            jlStatus.setText("O troco do cliente Ã© R$: " + troco);
        } else {
            jtfTroco.setText(String.valueOf("R$ " + "0"));
            jlStatus.setText("Complete o pagamento...");

        }
    }

    /**
     * Recarrega a tabela das vendas realizadas, na guia 2
     */
    private void carregarVendas() {
        DefaultTableModel modelo = (DefaultTableModel) jtVendas.getModel();
        listaModelVendasClientes = controllerVendasCliente.getListaVendasClienteController();

        int cont = listaModelVendasClientes.size();
        //Limpa tabela antes de carregar
        modelo.setNumRows(0);
        for (int i = 0; i < cont; i++) {
            modelo.addRow(new Object[]{
                listaModelVendasClientes.get(i).getModelVendas().getIdVenda(),
                listaModelVendasClientes.get(i).getModelCliente().getCliNome(),
                listaModelVendasClientes.get(i).getModelVendas().getVenDataVenda()
            });
        }
    }

    /**
     * Limpa os dados da minha tela de cadastro de vendas, usado para zerar a
     * venda e registrar uma nova
     */
    private void limparFormulario() {
        jtfDesconto.setText("");
        jtfValorTotal.setText("");
        jtfNumeroVenda.setText("");
        jlStatus.setText("");
        DefaultTableModel modelo = (DefaultTableModel) jtProdutosVenda.getModel();
        //Limpa tabela antes de carregar
        modelo.setNumRows(0);
    }

    private void habilitarDesabilitarCambos(boolean status) {
        if (status) {
            jcbNomeCliente.setEnabled(true);
            jtfCodigoCliente.setEnabled(true);
            jcbNomeProduto.setEnabled(true);
            jtfCodigoProduto.setEnabled(true);
            jbSalvar.setEnabled(true);
            jbAdicionar.setEnabled(true);
            jspQuantidade.setEnabled(true);
            jtfRecebido.setEnabled(true);
            jtfDesconto.setEnabled(true);
            jtfTroco.setEnabled(true);
        } else {
            jcbNomeCliente.setEnabled(false);
            jtfCodigoCliente.setEnabled(false);
            jcbNomeProduto.setEnabled(false);
            jtfCodigoProduto.setEnabled(false);
            jbSalvar.setEnabled(false);
            jbAdicionar.setEnabled(false);
            jspQuantidade.setEnabled(false);
            jtfRecebido.setEnabled(false);
            jtfDesconto.setEnabled(false);
            jtfTroco.setEnabled(false);
        }
    }

    
    private void jtProdutosVendaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtProdutosVendaKeyReleased
        // TODO add your handling code here:

        editarSelecao();
        somarValorTotalProdutos();
    }//GEN-LAST:event_jtProdutosVendaKeyReleased

    private void jtfCodigoProdutoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfCodigoProdutoFocusLost
        // TODO add your handling code here:
        modelProdutos = controllerProdutos.retornarProdutoController(Integer.parseInt(jtfCodigoProduto.getText()));
        jcbNomeProduto.setSelectedItem(modelProdutos.getProNome());
    }//GEN-LAST:event_jtfCodigoProdutoFocusLost

    private void jtfCodigoProdutoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCodigoProdutoKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            adicionarProduto();
        }
    }//GEN-LAST:event_jtfCodigoProdutoKeyPressed

    private void jcbNomeClientePopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jcbNomeClientePopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        if (jcbNomeCliente.isPopupVisible()) {
            preencherCodigoClientePeloCombobox();
        }
    }//GEN-LAST:event_jcbNomeClientePopupMenuWillBecomeInvisible

    private void jcbNomeClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbNomeClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbNomeClienteActionPerformed

    private void jtfTrocoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfTrocoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfTrocoActionPerformed

    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed
        // TODO add your handling code here:

        jlStatus.setText("AGUARDE...");
        int codigoVenda = 0, codigoProduto = 0;
        listaModelVendasProdutos = new ArrayList<>();
        double desconto = 0;
        //Tratamento do desconto, se o desconto estiver vazio ele vai setar zero.
        if (jtfDesconto.getText().equals("")) {
            desconto = 0;
        } else {
            desconto = formatador.converterVirgulaParaPontoReturn(jtfDesconto.getText());
        }
        //quando o id da venda estiver vazio ele recupera o nÃºmero da venda
        if (!jtfNumeroVenda.getText().equals("")) {
            modelVendas.setIdVenda(Integer.parseInt(jtfNumeroVenda.getText()));
        }
        modelVendas.setCliente(Integer.parseInt(jtfCodigoCliente.getText()));
        try {
            modelVendas.setVenDataVenda(blDatas.converterDataParaDateUS(new java.util.Date(System.currentTimeMillis())));
        } catch (Exception e) {
            e.printStackTrace();
        }
        modelVendas.setVenValorLiquido(Double.parseDouble(jtfValorTotal.getText()));
        modelVendas.setVenValorBruto(Double.parseDouble(jtfValorTotal.getText()) + desconto);
        modelVendas.setVenDesconto(desconto);

        //O prÃ³ximo if serve para escolher quando o evento vai salvar ou alterar a venda
        /**
        * SALVAR
        */
        if (alterarSalvar.equals("salvar")) {
            //Salvar vendas
            codigoVenda = controllerVendas.salvarVendasController(modelVendas);
            if (codigoVenda > 0) {

                //se o produto for cadastrado salvo no modelVendas vai executar este codigo
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao salvar venda, cunsulta a SSD e informe o cÃ³digo de erro VV-SV", "Erro", JOptionPane.ERROR_MESSAGE);
            }

            int cont = jtProdutosVenda.getRowCount();
            for (int i = 0; i < cont; i++) {
                codigoProduto = (int) jtProdutosVenda.getValueAt(i, 0);
                //venda
                modelVendasProdutos = new ModelProdutosDaVenda();//Cria um novo ModelVendas para nÃ£o ficar nehum lixo das vendas anteriores
                modelProdutos = new ModelProduto();//Cria um novo ModelProduto para nÃ£o ficar nehum lixo das vendas anteriores
                modelVendasProdutos.setProduto(codigoProduto);
                modelVendasProdutos.setIdDaVenda(codigoVenda);
                modelVendasProdutos.setVenProQuantidadeVendida(Integer.parseInt(jtProdutosVenda.getValueAt(i, 2).toString()));//Busca a quantidade de produtos na tabela jtProdutos
                modelVendasProdutos.setVenProValor((double) jtProdutosVenda.getValueAt(i, 3));//Busca o valor unitÃ¡rio do produto na tabela jtProdutos
                //produtos da venda
                modelProdutos.setIdProduto(codigoProduto);//Salva o id do produto deste cliclo de for no modelProdutos
                //Atualiza o estoque do produto abatendo o que foi vendido
                modelProdutos.setProEstoque(
                    controllerProdutos.retornarProdutoController(codigoProduto).getProEstoque()//
                    - Integer.parseInt(jtProdutosVenda.getValueAt(i, 2).toString()));
                listaModelVendasProdutos.add(modelVendasProdutos);
                listaModelProdutos.add(modelProdutos);

            }
            //Salvar lista de protudos da vendas no banco de dados
            if (controllerVendasProdutos.salvarVendasProdutosController(listaModelVendasProdutos)) {
                //Alterar estoque dos produtos da venda atual
                controllerProdutos.alterarEstoqueProdutoController(listaModelProdutos);
                carregarVendas();
                limparFormulario();
                habilitarDesabilitarCambos(false);
                jtfRecebido.setText("0");//zera o valor recebido quando clica em alterar venda
                jtVendas.setRowSelectionInterval(jtVendas.getRowCount() - 1, jtVendas.getRowCount() - 1); //Seleciona a ultima linha da tabela

                jtpViewVendas.setSelectedIndex(1); // Muda para guia 2 janela consultar vendas
                JOptionPane.showMessageDialog(this, "Venda salva com sucesso", "Obrigado", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao salvar produtos, cunsulta a SSD e informe o cÃ³digo de erro VV-SPV", "Erro", JOptionPane.ERROR_MESSAGE);
            }

        } else {
            /**
            * ALTERAR
            */
            //Se a opÃ§Ã£o ExcluÃ­da for diferente de salvar ou seja ALTERAR
            //INICIO RETORNAR O ESTOQUE E ECLUIR OS "PRODUTOS" DA VENDA

            int linha = jtVendas.getSelectedRow();
            codigoVenda = (int) jtVendas.getValueAt(linha, 0);
            listaModelProdutos = new ArrayList<>();//cria uma nova lista de produtos
            listaModelProdutosVendasprodutos = controllerProdutosVendasProdutos.getListaProdutosVendasProdutosController(codigoVenda);//recupera a venda no banco de dados pelo cÃ³digo da venda

            for (int i = 0; i < listaModelProdutosVendasprodutos.size(); i++) {
                modelProdutos = new ModelProduto();//zera o model produtos (aqui contem os atributos do produto)
                modelProdutos.setIdProduto(listaModelProdutosVendasprodutos.get(i).getModelProdutos().getIdProduto());

                modelProdutos.setProEstoque(
                    listaModelProdutosVendasprodutos.get(i).getModelProdutos().getProEstoque()
                    + listaModelProdutosVendasprodutos.get(i).getModelProdutosDaVenda().getVenProQuantidadeVendida()
                );

                listaModelProdutos.add(modelProdutos);
            }

            if (controllerProdutos.alterarEstoqueProdutoController(listaModelProdutos)) {
                if (controllerVendasProdutos.excluirVendasProdutosController(codigoVenda)) {
                    // Chamando o comando excluir, se o produto for excluÃ­do ele executa a mensagem de confirmaÃ§Ã£o.

                    //se a venda for excluÃ­da com sucesso vai executar isto
                    this.carregarVendas();

                } else {
                    JOptionPane.showMessageDialog(this, "Erro ao remover do estoque os produtos, consulte o cÃ³digo de erro AE-EV1", "Erro", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao Excluir a venda, consulte o cÃ³digo de erro AE-EV2", "Erro", JOptionPane.ERROR_MESSAGE);
            }
            //FIM RETORNAR O ESTOQUE E EXCLUIR OS "PRODUTOS" DA VENDA
            //ATUALIZAR TABELA DE VENDAS
            if (controllerVendas.atualizarVendasController(modelVendas)) {
                //se conseguir atualizar a venda vai executar este comando
                jtpViewVendas.setSelectedIndex(1); // Muda para guia 2 janela consultar vendas
                habilitarDesabilitarCambos(false);//desabilita os campos e o botÃ£o salvar quando estiver alterando
                this.carregarVendas();//Carrega as vendas na guia 2
                jtfRecebido.setText("0");//zera o valor recebido quando clica em alterar venda
                jtfTroco.setText("0");//zera o troco quando clica em alterar venda

            } else {
                JOptionPane.showMessageDialog(this, "Erro ao Alterar venda, consulte o cÃ³digo de erro EA-AV1", "Erro", JOptionPane.ERROR_MESSAGE);
            }

            //INICIO SALVAR NOVAMENTEA A TABELA NO BANCO DE DADOS APÃS ALTERAR
            //O comando anterior apaga toda a tabela, por isto precisa desta segunda etapa.
            int cont = jtProdutosVenda.getRowCount();
            for (int i = 0; i < cont; i++) {
                codigoProduto = (int) jtProdutosVenda.getValueAt(i, 0);
                //venda
                modelVendasProdutos = new ModelProdutosDaVenda();
                modelProdutos = new ModelProduto();//zera a lista de produtos para nÃ£o ficar nehum lixo das vendas anteriores
                modelVendasProdutos.setProduto(codigoProduto);
                modelVendasProdutos.setIdDaVenda(codigoVenda);
                modelVendasProdutos.setVenProQuantidadeVendida(Integer.parseInt(jtProdutosVenda.getValueAt(i, 2).toString()));
                modelVendasProdutos.setVenProValor((double) jtProdutosVenda.getValueAt(i, 3));
                //produtos da venda
                modelProdutos.setIdProduto(codigoProduto);
                //Salva o estoque abatendo o que foi vendido
                modelProdutos.setProEstoque(
                    controllerProdutos.retornarProdutoController(codigoProduto).getProEstoque()
                    - Integer.parseInt(jtProdutosVenda.getValueAt(i, 2).toString()));
                listaModelVendasProdutos.add(modelVendasProdutos);
                listaModelProdutos.add(modelProdutos);

            }
            //FIM SALVAR NOVAMENTEA TABELA SELECIONADA NA VENDA QUE ESTÃ SENDO ALTERADA
            //SALVAR PRODUTOS DA VENDA
            if (controllerVendasProdutos.salvarVendasProdutosController(listaModelVendasProdutos)) {
                JOptionPane.showMessageDialog(this, "AlteraÃ§Ã£o salva com sucesso", "Tudo certo", JOptionPane.INFORMATION_MESSAGE);
                carregarVendas();
                limparFormulario();

            } else {
                JOptionPane.showMessageDialog(this, "Erro ao Salvar os produtos ao alterar venda, consulte o cÃ³digo de erro EA-AV2", "Erro", JOptionPane.ERROR_MESSAGE);
            }

        }
        jlStatus.setText("");
    }//GEN-LAST:event_jbSalvarActionPerformed

    private void jbAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAdicionarActionPerformed
        // Este botÃ£o adiciona os produtos na tabela de cadastro de venda para posteriormente salvar a venda
        adicionarProduto(); // metodo antigo usado para chamar as vendas

    }//GEN-LAST:event_jbAdicionarActionPerformed

    private void jbAdicionarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbAdicionarKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            adicionarProduto();
        }
    }//GEN-LAST:event_jbAdicionarKeyPressed

    private void jtfNumeroVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfNumeroVendaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfNumeroVendaActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        // TODO add your handling code here:
        habilitarDesabilitarCambos(false);
        limparFormulario();
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jcbNomeProdutoPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jcbNomeProdutoPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        if (jcbNomeProduto.isVisible()) {
            preencherCodigoProdutoPeloCombobox();
        }
    }//GEN-LAST:event_jcbNomeProdutoPopupMenuWillBecomeInvisible

    private void jcbNomeProdutoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jcbNomeProdutoKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            adicionarProduto();
        }
    }//GEN-LAST:event_jcbNomeProdutoKeyPressed

    private void jspQuantidadeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jspQuantidadeKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            adicionarProduto();
        }
    }//GEN-LAST:event_jspQuantidadeKeyPressed

    private void jbNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNovoActionPerformed
        // Comando usado para zerar o formulÃ¡rio de cadastro e comeÃ§ar uma nova venda.
        habilitarDesabilitarCambos(true);
        alterarSalvar = "salvar";
        limparFormulario();
    }//GEN-LAST:event_jbNovoActionPerformed

    private void jtfDescontoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfDescontoFocusLost
        //Ao perder o foco o JtfDesconto vai executar o seguinte comando
        somarValorTotalProdutos();
    }//GEN-LAST:event_jtfDescontoFocusLost

    private void jtfDescontoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfDescontoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfDescontoActionPerformed

    private void jtfDescontoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfDescontoKeyReleased
        // TODO add your handling code here:
        somarValorTotalProdutos();
    }//GEN-LAST:event_jtfDescontoKeyReleased

    private void jtfCodigoClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfCodigoClienteFocusLost
        // TODO add your handling code here:
        modelCliente = controllerCliente.getClienteController(Integer.parseInt(jtfCodigoCliente.getText()));
        jcbNomeCliente.setSelectedItem(modelCliente.getCliNome());
    }//GEN-LAST:event_jtfCodigoClienteFocusLost

    private void jtfRecebidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfRecebidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfRecebidoActionPerformed

    private void jtfRecebidoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfRecebidoKeyReleased
        // TODO add your handling code here:
        somarValorTotalProdutos();
    }//GEN-LAST:event_jtfRecebidoKeyReleased

    private void jbPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPesquisarActionPerformed
        // TODO add your handling code here:

        carregarVendas();
    }//GEN-LAST:event_jbPesquisarActionPerformed

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        // Comando para excluir venda no menu (consultar / excluir / alterar)
        /**
        * Declaro o int linha para marcar a linha selecionada que quero excluir
        * Declaro o int cÃ³digoVenda que seleciona o cÃ³digo na linha declarada,
        * no caso a coluna fica 0 pois vou pegar apenas o cÃ³digo da venda na
        * linha selecionada
        */
        int linha = jtVendas.getSelectedRow();//marca a linha selecionada

        int codigoVenda = (int) jtVendas.getValueAt(linha, 0);//pega o cÃ³digo da venda da linha selecionada e salva na variavel codigoVenda
        listaModelProdutos = new ArrayList<>();//Cria uma nova ListaModelProdutos para evitar receber lixo de outras vendas
        listaModelProdutosVendasprodutos = controllerProdutosVendasProdutos.getListaProdutosVendasProdutosController(codigoVenda);// ApÃ³s o sinal de = o comando cria um array com todos os produtos da venda seleceionada entre parenteses

        for (int i = 0; i < listaModelProdutosVendasprodutos.size(); i++) {//o ciclo se repete atÃ© terminar os produtos a serem excluÃ­dos
            modelProdutos = new ModelProduto();
            modelProdutos.setIdProduto(listaModelProdutosVendasprodutos.get(i).getModelProdutos().getIdProduto());//Busca na lista,..O ModelProduto e seta o id do produto, para cada produto da lista.

            modelProdutos.setProEstoque(//Atualiza o estoque apÃ³s excluir os produtos
                listaModelProdutosVendasprodutos.get(i).getModelProdutos().getProEstoque()//Busca no array lista,..O ModelProduto e dentro deste Model seta o estoque
                + listaModelProdutosVendasprodutos.get(i).getModelProdutosDaVenda().getVenProQuantidadeVendida());//Busca no array lista,..O ModelProdutosDaVenda e dentro deste Model seta a quantidade vendida
            listaModelProdutos.add(modelProdutos);
        }

        if (controllerProdutos.alterarEstoqueProdutoController(listaModelProdutos)) {
            controllerVendasProdutos.excluirVendasProdutosController(codigoVenda);
            // Chamando o comando excluir, se o produto for excluÃ­do ele executa a mensagem de confirmaÃ§Ã£o.
            if (controllerVendas.excluirVendasController(codigoVenda)) {
                System.out.println("Venda ExcluÃ­da com sucesso");
                JOptionPane.showMessageDialog(this, "Venda ExcluÃ­da com sucesso", "Tudo certo", JOptionPane.INFORMATION_MESSAGE);
                this.carregarVendas();
                DefaultTableModel model = (DefaultTableModel) jtVisualizarVenda.getModel();
                model.setNumRows(0);
                try {//Este try seleciona sempre a primeira linha da tabela apÃ³s excluir uma venda, se nÃ£o existir mais vendas ele muda para tela de cadastro de vendas
                    jtVendas.setRowSelectionInterval(0 , 0);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "VocÃª nÃ£o possui mais vendas, realize novas vendas para exibir algo aqui", "AtenÃ§Ã£o", JOptionPane.WARNING_MESSAGE);
                    jtpViewVendas.setSelectedIndex(0);
                }

            } else {
                //se cair neste erro significa que tem algo errado no codigoVenda que foi passado(Pode ser que ele nÃ£o exista no banco e etc)
                JOptionPane.showMessageDialog(this, "Erro ao Excluir a venda, consulte o cÃ³digo de erro AE-EV1", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            //se cair neste erro Ã© porquÃª tem algo errado na listaModelProdutos
            JOptionPane.showMessageDialog(this, "Erro ao Excluir a venda, consulte o cÃ³digo de erro AE-EV2", "Erro", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jbExcluirActionPerformed

    private void jbAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlterarActionPerformed
        // TODO add your handling code here:

        try {

            habilitarDesabilitarCambos(true);

            alterarSalvar = "alterar";
            int linha = jtVendas.getSelectedRow();//linha selecionada na tabela de vendas realizadas
            int codigoVenda = (int) jtVendas.getValueAt(linha, 0); //pega o cÃ³digo da venda na linha selecionada
            listaModelProdutosVendasprodutos = controllerProdutosVendasProdutos.getListaProdutosVendasProdutosController(codigoVenda);//recupera a venda no banco
            DefaultTableModel modelo = (DefaultTableModel) jtProdutosVenda.getModel();//Usa a tabela como modelo
            modelo.setNumRows(0);//zera a tabela
            int qtdProdTabela = listaModelProdutosVendasprodutos.size();//vÃª a quantidade de produtos na tabela
            jcbNomeCliente.setSelectedItem((String) jtVendas.getValueAt(linha, 1));//Preenche o campo cliente, com o cliente da venda.
            preencherCodigoClientePeloCombobox();//preenche o cÃ³digo do cliente pelo combobox (usei isto para facilitar o preenchimento)
            double desconto = controllerVendas.getVendasController(codigoVenda).getVenDesconto();//retorna o valor do desconto salvo no banco de dados
            jtfDesconto.setText(String.valueOf(desconto));//aplica o desconto no jtf desconto
            jcbNomeCliente.setEnabled(false);//Desabilita o campo de nome e ID do cliente para nÃ£o mudar o nome do cliente quando for alterar a venda
            jtfCodigoCliente.setEnabled(false);//Desabilita o campo de nome e ID do cliente para nÃ£o mudar o nome do cliente quando for alterar a venda
            for (int i = 0; i < qtdProdTabela; i++) {

                //Seta no campo nÃºmero da venda o id da venda jÃ¡ cadastrada
                jtfNumeroVenda.setText(String.valueOf(listaModelProdutosVendasprodutos.get(i).getModelProdutosDaVenda().getIdDaVenda()));
                //Preenche a tabela com os produtos da venda.
                modelo.addRow(new Object[]{
                    listaModelProdutosVendasprodutos.get(i).getModelProdutos().getIdProduto(),//ID atual do produto no banco
                    listaModelProdutosVendasprodutos.get(i).getModelProdutos().getProNome(),//Nome Atual do produto no banco
listaModelProdutosVendasprodutos.get(i).getModelProdutosDaVenda().getVenProQuantidadeVendida(),//quantidade vendida na data da compra
                    listaModelProdutosVendasprodutos.get(i).getModelProdutosDaVenda().getVenProValor(),//valor vendido na data da compra
                    listaModelProdutosVendasprodutos.get(i).getModelProdutosDaVenda().getVenProQuantidadeVendida()                    * listaModelProdutosVendasprodutos.get(i).getModelProdutosDaVenda().getVenProValor()//quantidade * valor = total
                });
            }
            somarValorTotalProdutos(); //soma todos os produtos e preenche o JTF total
            jtpViewVendas.setSelectedIndex(0); // MUDA PARA A GUIA PRINCIPAL DE VENDAS

        } catch (ArrayIndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(this, "Selecione a venda que deseja alterar", "ATENÃÃO", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jbAlterarActionPerformed

    private void jbNovo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNovo1ActionPerformed
        // TODO add your handling code here:
        alterarSalvar = "salvar";
        habilitarDesabilitarCambos(true);//habilita os campos na guia 1 para editar
        jtpViewVendas.setSelectedIndex(0); // Muda para guia 1 janela cadastrar vendas
    }//GEN-LAST:event_jbNovo1ActionPerformed

    private void jtVisualizarVendaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtVisualizarVendaKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jtVisualizarVendaKeyReleased

    private void JbVisualizarVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JbVisualizarVendaActionPerformed
        // TODO add your handling code here:

        try {
            int linha = jtVendas.getSelectedRow();//linha selecionada na tabela de vendas realizadas
            int codigoVenda = (int) jtVendas.getValueAt(linha, 0); //pega o cÃ³digo da venda na linha selecionada
            listaModelProdutosVendasprodutos = controllerProdutosVendasProdutos.getListaProdutosVendasProdutosController(codigoVenda);//recupera a venda no banco
            DefaultTableModel modelo = (DefaultTableModel) jtVisualizarVenda.getModel();//Usa a tabela como modelo
            modelo.setNumRows(0);//zera a tabela
            int qtdProdTabela = listaModelProdutosVendasprodutos.size();//vÃª a quantidade de produtos na tabela

            double desconto = controllerVendas.getVendasController(codigoVenda).getVenDesconto();//retorna o valor do desconto salvo no banco de dados
            jtfvisualizarDesconto.setText(String.valueOf(desconto));//aplica o desconto no jtf desconto

            for (int i = 0; i < qtdProdTabela; i++) {

                //Seta no campo nÃºmero da venda o id da venda jÃ¡ cadastrada
                jtfNumeroVenda.setText(String.valueOf(listaModelProdutosVendasprodutos.get(i).getModelProdutosDaVenda().getIdDaVenda()));
                //Preenche a tabela com os produtos da venda.
                modelo.addRow(new Object[]{
                    listaModelProdutosVendasprodutos.get(i).getModelProdutos().getIdProduto(),//ID atual do produto no banco
                    listaModelProdutosVendasprodutos.get(i).getModelProdutos().getProNome(),//Nome Atual do produto no banco
listaModelProdutosVendasprodutos.get(i).getModelProdutosDaVenda().getVenProQuantidadeVendida(),//quantidade vendida na data da compra
                    listaModelProdutosVendasprodutos.get(i).getModelProdutosDaVenda().getVenProValor(),//valor vendido na data da compra
                    listaModelProdutosVendasprodutos.get(i).getModelProdutosDaVenda().getVenProQuantidadeVendida()                    * listaModelProdutosVendasprodutos.get(i).getModelProdutosDaVenda().getVenProValor()//quantidade * valor = total
                });
            }

            //soma todos os produtos e preenche o JTF total
            double soma = 0, valorPro, total, totalLiquido;
            int quantPro;
            int cont = jtVisualizarVenda.getRowCount();

            //repete o comando for de soma enquanto ainda existir linhas na tabela
            for (int i = 0; i < cont; i++) {
                quantPro = (int) jtVisualizarVenda.getValueAt(i, 2);
                valorPro = (double) jtVisualizarVenda.getValueAt(i, 3);
                total = quantPro * valorPro;

                soma = soma + total;

            }
            DecimalFormat arredondar = new DecimalFormat("0.00");
            totalLiquido = soma - desconto;

            jtfTotalLiquido.setText(String.valueOf(arredondar.format(totalLiquido)));
            jtfTotalBruto.setText(String.valueOf(arredondar.format(soma)));
            jtfvisualizarDesconto.setText(String.valueOf(arredondar.format(desconto)));
            carregarVendas();
            jtVendas.setRowSelectionInterval(linha, linha);
        } catch (ArrayIndexOutOfBoundsException e) {

            carregarVendas();
        }
    }//GEN-LAST:event_JbVisualizarVendaActionPerformed

    private void jbRemoverProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRemoverProdutosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jbRemoverProdutosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewVendasJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewVendasJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewVendasJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewVendasJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ViewVendasJDialog dialog = new ViewVendasJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JbVisualizarVenda;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPCadastro;
    private javax.swing.JPanel jPConsulta;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton jbAdicionar;
    private javax.swing.JButton jbAlterar;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbNovo;
    private javax.swing.JButton jbNovo1;
    private javax.swing.JButton jbPesquisar;
    private javax.swing.JButton jbRemoverProdutos;
    private javax.swing.JButton jbSalvar;
    private componentes.UJComboBox jcbNomeCliente;
    private componentes.UJComboBox jcbNomeProduto;
    private javax.swing.JLabel jlStatus;
    private javax.swing.JSpinner jspQuantidade;
    private javax.swing.JTable jtProdutosVenda;
    private javax.swing.JTable jtVendas;
    private javax.swing.JTable jtVisualizarVenda;
    private javax.swing.JTextField jtfCodigoCliente;
    private javax.swing.JTextField jtfCodigoProduto;
    private javax.swing.JTextField jtfDesconto;
    private javax.swing.JTextField jtfNumeroVenda;
    private javax.swing.JTextField jtfPesquisa;
    private javax.swing.JTextField jtfRecebido;
    private javax.swing.JFormattedTextField jtfTotalBruto;
    private javax.swing.JFormattedTextField jtfTotalLiquido;
    private javax.swing.JTextField jtfTroco;
    private javax.swing.JTextField jtfValorTotal;
    private javax.swing.JFormattedTextField jtfvisualizarDesconto;
    private javax.swing.JTabbedPane jtpViewVendas;
    // End of variables declaration//GEN-END:variables
}
