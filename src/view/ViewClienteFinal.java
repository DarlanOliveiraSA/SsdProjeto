/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.ControllerCliente;
import java.awt.Color;
import java.awt.Point;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import model.ModelCliente;

/**
 *
 * @author Darlan
 */
public class ViewClienteFinal extends javax.swing.JFrame {

    ControllerCliente controllerCliente = new ControllerCliente();
    private ModelCliente modelCliente = new ModelCliente();
    ArrayList<ModelCliente> listaModelClientes = new ArrayList<>();
    String salvarAlterar;
    public ModelCliente clienteCadastrado = new ModelCliente();
    public ViewVendasFinal viewVendasFinal;
    Point point = new Point();
    ArrayList<JTextField> listaCamposParaValidar = new ArrayList<>();

    /**
     * método para habilitar e desabilitar campos na janela de clientes
     */
    private void desabilitaHabilitaCampos(boolean condicao) {
        jtfNome.setEnabled(condicao);
        jtfEndereco.setEnabled(condicao);
        jtfBairro.setEnabled(condicao);
        jtfCidade.setEnabled(condicao);
        jcbUF.setEnabled(condicao);
        jtfCep.setEnabled(condicao);
        jtfTelefone.setEnabled(condicao);
        jbSalvar.setEnabled(condicao);
        jtfNumCasa.setEnabled(condicao);
        jtfDDDTel.setEnabled(condicao);
        jtfPontoDeReferencia.setEnabled(condicao);
    }

    /**
     * Limpar os campos do formulário Cliente
     *
     * @param condicao
     */
    private void limparCampos() {
        jtfNome.setText("");
        jtfEndereco.setText("");
        jtfBairro.setText("");
        jtfCidade.setText("");
        jtfCep.setText("");
        jtfDDDTel.setText("");
        jtfTelefone.setText("");
        jtfNumCasa.setText("");
        jtfPontoDeReferencia.setText("");

    }

    /**
     * Creates new form ViewCliente
     */
    public ViewClienteFinal() {
        initComponents();
        carregarCliente();
        setLocationRelativeTo(null);
        this.desabilitaHabilitaCampos(false);
        this.limparCampos();
        setAlwaysOnTop(true);
        //this.setBackground(new Color(0,0,0,0));
        listaCamposParaValidar.add(jtfNome);
        listaCamposParaValidar.add(jtfEndereco);
        listaCamposParaValidar.add(jtfNumCasa);
        listaCamposParaValidar.add(jtfBairro);
        listaCamposParaValidar.add(jtfCidade);
        listaCamposParaValidar.add(jtfCep);
        listaCamposParaValidar.add(jtfDDDTel);
        listaCamposParaValidar.add(jtfTelefone);
        adicionarFuncaoDeTecla();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpPlanoDeFundo = new javax.swing.JPanel();
        barraDeMover1 = new javax.swing.JPanel();
        btMinimizar = new componentes.UJPanelImagem();
        btFechar = new componentes.UJPanelImagem();
        jPanel2 = new javax.swing.JPanel();
        jtfCep = new javax.swing.JFormattedTextField();
        jtfTelefone = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();
        jtfNome = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jtfNumCasa = new componentes.UJTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jtfEndereco = new javax.swing.JTextField();
        jtfDDDTel = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jtfCidade = new javax.swing.JTextField();
        jcbUF = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jtfBairro = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jtfCodigo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jtfPontoDeReferencia = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtCliente = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jtfNomePesquisa = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jtfTelPesquisa = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jtfEndePesquisa = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jbCancelar = new javax.swing.JButton();
        jbExcluir = new javax.swing.JButton();
        jbAlterar = new javax.swing.JButton();
        jbNovo = new javax.swing.JButton();
        jbSalvar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cliente");
        setUndecorated(true);
        setResizable(false);

        jpPlanoDeFundo.setBackground(new java.awt.Color(119, 187, 153));

        barraDeMover1.setBackground(new java.awt.Color(119, 187, 153));
        barraDeMover1.setPreferredSize(new java.awt.Dimension(515, 23));
        barraDeMover1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                barraDeMover1MouseDragged(evt);
            }
        });
        barraDeMover1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                barraDeMover1MousePressed(evt);
            }
        });

        btMinimizar.setImagem(new java.io.File("C:\\SSDprojeto\\src\\imagens\\Fundos\\btMinimizar.png"));
        btMinimizar.setMinimumSize(new java.awt.Dimension(24, 24));
        btMinimizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btMinimizarMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout btMinimizarLayout = new javax.swing.GroupLayout(btMinimizar);
        btMinimizar.setLayout(btMinimizarLayout);
        btMinimizarLayout.setHorizontalGroup(
            btMinimizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 24, Short.MAX_VALUE)
        );
        btMinimizarLayout.setVerticalGroup(
            btMinimizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 24, Short.MAX_VALUE)
        );

        btFechar.setImagem(new java.io.File("C:\\SSDprojeto\\src\\imagens\\Fundos\\btFecharJanela.png"));
        btFechar.setMinimumSize(new java.awt.Dimension(24, 24));
        btFechar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btFecharMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout btFecharLayout = new javax.swing.GroupLayout(btFechar);
        btFechar.setLayout(btFecharLayout);
        btFecharLayout.setHorizontalGroup(
            btFecharLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 24, Short.MAX_VALUE)
        );
        btFecharLayout.setVerticalGroup(
            btFecharLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 24, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout barraDeMover1Layout = new javax.swing.GroupLayout(barraDeMover1);
        barraDeMover1.setLayout(barraDeMover1Layout);
        barraDeMover1Layout.setHorizontalGroup(
            barraDeMover1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, barraDeMover1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btMinimizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btFechar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        barraDeMover1Layout.setVerticalGroup(
            barraDeMover1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(barraDeMover1Layout.createSequentialGroup()
                .addGroup(barraDeMover1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btFechar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btMinimizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jtfCep.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        jLabel2.setText("Nome:");

        jtfNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfNomeActionPerformed(evt);
            }
        });

        jLabel9.setText("Nº / Complemento");

        jLabel3.setText("Endereço:");

        jLabel10.setText("DDD");

        jtfEndereco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfEnderecoActionPerformed(evt);
            }
        });

        jLabel4.setText("Bairro");

        jLabel5.setText("UF");

        jLabel6.setText("Cidade");

        jtfCidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfCidadeActionPerformed(evt);
            }
        });

        jcbUF.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "MG", "SP", "RJ", " " }));

        jLabel7.setText("Telefone");

        jtfBairro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfBairroActionPerformed(evt);
            }
        });

        jLabel8.setText("CEP");

        jPanel4.setPreferredSize(new java.awt.Dimension(80, 80));

        jtfCodigo.setEditable(false);
        jtfCodigo.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jtfCodigo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtfCodigo.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jtfCodigo.setEnabled(false);
        jtfCodigo.setPreferredSize(new java.awt.Dimension(60, 20));
        jtfCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfCodigoActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Codigo do Cliente:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtfCodigo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jtfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel20.setText("Ponto de referencia para entrega:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtfNome, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(7, 7, 7)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jtfEndereco)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtfNumCasa, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel4)
                                    .addComponent(jtfBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtfCidade)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jcbUF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(jtfCep))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(jtfDDDTel, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jtfTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jtfPontoDeReferencia))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addGap(26, 26, 26))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jtfNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jtfEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtfCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel9))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jtfBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jtfNumCasa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel8)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jtfCep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jcbUF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtfDDDTel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtfTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jtfPontoDeReferencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jtCliente.setAutoCreateRowSorter(true);
        jtCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "Endereço", "Telefone"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtCliente.getTableHeader().setReorderingAllowed(false);
        jtCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtClienteFocusGained(evt);
            }
        });
        jScrollPane1.setViewportView(jtCliente);
        if (jtCliente.getColumnModel().getColumnCount() > 0) {
            jtCliente.getColumnModel().getColumn(0).setMinWidth(20);
            jtCliente.getColumnModel().getColumn(0).setPreferredWidth(20);
        }

        jButton1.setText("Rel. Clientes");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("Pesquisar Cliente");

        jLabel12.setText("Nome");

        jLabel13.setText("Telefone");

        jLabel14.setText("Endereço");

        jButton2.setText("Pesquisar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtfNomePesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addComponent(jtfTelPesquisa)))
                            .addComponent(jLabel14)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jtfEndePesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton2)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel11)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfNomePesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel13)
                        .addGap(2, 2, 2)
                        .addComponent(jtfTelPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14)
                .addGap(1, 1, 1)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfEndePesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(5, 5, 5))
        );

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(136, 187, 221)));

        jbCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/iconfinder_sign-error_299045.png"))); // NOI18N
        jbCancelar.setText("Cancelar");
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        jbExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/iconfinder_trashcan_299071.png"))); // NOI18N
        jbExcluir.setText("Excluir");
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        jbAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/iconfinder_pencil_285638.png"))); // NOI18N
        jbAlterar.setText("Alterar");
        jbAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlterarActionPerformed(evt);
            }
        });

        jbNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/iconfinder_sign-add_299068.png"))); // NOI18N
        jbNovo.setText("Novo");
        jbNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNovoActionPerformed(evt);
            }
        });

        jbSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/iconfinder_floppy_285657.png"))); // NOI18N
        jbSalvar.setText("Salvar");
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbAlterar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbNovo)
                .addGap(116, 116, 116)
                .addComponent(jbSalvar))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbNovo)
                    .addComponent(jbCancelar)
                    .addComponent(jbSalvar)
                    .addComponent(jbExcluir)
                    .addComponent(jbAlterar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jpPlanoDeFundoLayout = new javax.swing.GroupLayout(jpPlanoDeFundo);
        jpPlanoDeFundo.setLayout(jpPlanoDeFundoLayout);
        jpPlanoDeFundoLayout.setHorizontalGroup(
            jpPlanoDeFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPlanoDeFundoLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jpPlanoDeFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(barraDeMover1, javax.swing.GroupLayout.DEFAULT_SIZE, 579, Short.MAX_VALUE))
                .addGap(5, 5, 5))
        );
        jpPlanoDeFundoLayout.setVerticalGroup(
            jpPlanoDeFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPlanoDeFundoLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(barraDeMover1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpPlanoDeFundo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpPlanoDeFundo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtfCidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfCidadeActionPerformed

    private void jtfEnderecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfEnderecoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfEnderecoActionPerformed

    private void jtfNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfNomeActionPerformed

    private void jtfCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfCodigoActionPerformed

    private void jtfBairroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfBairroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfBairroActionPerformed
    /**
     * Verifica se todos os campos foram preenchidos com alguma informação.
     *
     * @return
     */
    private boolean validarCampos() {

        boolean status = true;
        String camposInvalidos = "";
        ArrayList listaCamposInvalidos = new ArrayList<>();
        ArrayList<JTextField> listaJtfNumericos = new ArrayList<>();

        ArrayList<JTextField> listaCamposParaValidar = new ArrayList<>();
        listaCamposParaValidar.add(jtfNome);
        listaCamposParaValidar.add(jtfEndereco);
        listaCamposParaValidar.add(jtfNumCasa);
        listaCamposParaValidar.add(jtfBairro);
        listaCamposParaValidar.add(jtfCidade);
        listaCamposParaValidar.add(jtfCep);
        listaCamposParaValidar.add(jtfDDDTel);
        listaCamposParaValidar.add(jtfTelefone);

        listaJtfNumericos.add(jtfCep);
        listaJtfNumericos.add(jtfDDDTel);
        listaJtfNumericos.add(jtfTelefone);

        for (JTextField listaCampo : listaCamposParaValidar) {

            if (listaCampo.getText().isEmpty()) {
                listaCamposInvalidos.add(listaCampo);
                listaCampo.requestFocus();
                status = false;
            }

        }

        for (JTextField listaCampoFormNumero : listaJtfNumericos) {
            try {
                Integer.parseInt(listaCampoFormNumero.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Os Campos: CEP, DDD e TELEFONE devem ser preenchido apenas com números.", "Atenção!", JOptionPane.INFORMATION_MESSAGE);
                listaCampoFormNumero.requestFocus();
                status = false;
                break;
            }
        }

        for (Object listaCampoInvalido : listaCamposInvalidos) {
            int x = listaCamposParaValidar.indexOf(listaCampoInvalido);
            switch (x) {

                case 0:
                    camposInvalidos += "Nome. ";
                    status = false;
                    break;
                case 1:
                    camposInvalidos += "Endereço. ";
                    status = false;
                    break;
                case 2:
                    camposInvalidos += "Nº / Complemento. ";
                    status = false;
                    break;
                case 3:
                    camposInvalidos += "Bairro. ";
                    status = false;
                    break;
                case 4:
                    camposInvalidos += "Cidade. ";
                    status = false;
                    break;
                case 5:
                    camposInvalidos += "CEP. ";
                    status = false;
                    break;
                case 6:
                    camposInvalidos += "DDD. ";
                    status = false;
                    break;
                case 7:
                    camposInvalidos += "Telefone. ";
                    status = false;
                    break;

            }

        }

        int a = jtfCep.getText().length();//CEP
        int b = jtfDDDTel.getText().length();//DDD
        int c = jtfTelefone.getText().length();//TELEFONE

        if (jtfCep.getText().length() == 8) {

        } else {
            camposInvalidos += "\nO Cep deve ser preenchido com 8 números.";

            jtfCep.requestFocus();
            status = false;
        }
        if (jtfDDDTel.getText().length() == 2 || jtfDDDTel.getText().length() == 3) {

        } else {
            camposInvalidos += "\nO DDD deve ter pelo menos 2 caracteres";

            jtfDDDTel.requestFocus();
            status = false;
        }
        if (jtfTelefone.getText().length() == 8 || jtfTelefone.getText().length() == 9) {

        } else {
            camposInvalidos += "\nO telefone deve conter 8 ou 9 caracteres, pois só aceitamos celulares e fixos do Brasil.";
            status = false;
        }

        if (!status) {

            JOptionPane.showMessageDialog(this, "Verifique os campos abaixo: \n" + camposInvalidos + "\n", "Atenção!", JOptionPane.INFORMATION_MESSAGE);
        }

        return status;
    }

    private void adicionarFuncaoDeTecla() {

        for (JTextField jTextField : listaCamposParaValidar) {

            jTextField.addKeyListener(new java.awt.event.KeyAdapter() {
                @Override
                public void keyReleased(java.awt.event.KeyEvent evt) {
                    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                        mudarCampoSelecionado();
                    }
                }
            });

        }

        jtCliente.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2) {

                    int linhaSelecionada = jtCliente.getSelectedRow();//linha selecionada na tabela

                    int idCLiente = (int) jtCliente.getValueAt(linhaSelecionada, 0);

                    alterarCliente(controllerCliente.getClienteController(idCLiente));

                }
            }
        });

    }

    private void mudarCampoSelecionado() {

        for (JTextField jTextField : listaCamposParaValidar) {

            if (jTextField.getText().isEmpty()) {

                jTextField.requestFocus();
                break;

            }

        }

    }

    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed
        // Este evento é usado para salvar um cliente no banco de dados
        salvarAlterar = "salvar";

        if (validarCampos()) {

            ModelCliente modelClienteTelefone = controllerCliente.getClienteTelefoneController(jtfTelefone.getText());

            if (modelClienteTelefone.getCliTelefone() == null) {

                try {
                    modelCliente.setIdCliente(Integer.parseInt(this.jtfCodigo.getText()));
                } catch (NumberFormatException e) {

                }

                modelCliente.setCliNome(this.jtfNome.getText());
                modelCliente.setCliEndereco(this.jtfEndereco.getText());
                modelCliente.setCliBairro(this.jtfBairro.getText());
                modelCliente.setCliCidade(this.jtfCidade.getText());
                modelCliente.setCliUf(this.jcbUF.getSelectedItem().toString());
                modelCliente.setCliCep(this.jtfCep.getText());
                modelCliente.setCliTelefone(this.jtfTelefone.getText());
                modelCliente.setCliNumCasa(this.jtfNumCasa.getText());
                modelCliente.setCliDDDTel(this.jtfDDDTel.getText());
                modelCliente.setCliPontoReferencia(this.jtfPontoDeReferencia.getText());

                if (salvarAlterar.equals("salvar")) {
                    modelCliente.setIdCliente(controllerCliente.salvarClienteController(modelCliente));
                    if (modelCliente.getIdCliente() > 0) {
                        JOptionPane.showMessageDialog(this, "Cliente cadastrado com sucesso", "Bom trabalho", JOptionPane.INFORMATION_MESSAGE);
                        //carregar clientes na tabela
                        carregarCliente();
                        this.desabilitaHabilitaCampos(false);

                        this.limparCampos();
                        //-------------Muda os dados na view de venda-----

                        if (viewVendasFinal != null) {
                            viewVendasFinal.habilitarDesabilitarCambos(true);
                            viewVendasFinal.habilitarDesabilitarCampCliente(false);
                            controllerCliente.getClienteTelefoneController(modelCliente.getCliTelefone());
                            viewVendasFinal.atualizarCampos(modelCliente);
                            this.dispose();

                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Erro ao cadastrar cliente, Entre em contato com a SSD", "OPS", JOptionPane.ERROR_MESSAGE);
                    }
                } //----------------------Quando a variável salvarAlterar for igual alterar----------------------------------------

            } else { //----------------------Quando o telefone é diferente de Null----------------------------------------

                int i = JOptionPane.showConfirmDialog(this, "Este número de telefone já está cadastrado, deseja atualizar os dados de cadastro? ", "Erro: 100119", JOptionPane.ERROR_MESSAGE);

                if (i == 0) {
                    salvarAlterar = "alterar";
                    //alterarCliente(clienteTelefoneController);
                    modelCliente.setIdCliente(modelClienteTelefone.getIdCliente());

                    modelCliente.setCliNome(this.jtfNome.getText());
                    modelCliente.setCliEndereco(this.jtfEndereco.getText());
                    modelCliente.setCliBairro(this.jtfBairro.getText());
                    modelCliente.setCliCidade(this.jtfCidade.getText());
                    modelCliente.setCliUf(this.jcbUF.getSelectedItem().toString());
                    modelCliente.setCliCep(this.jtfCep.getText());
                    modelCliente.setCliTelefone(this.jtfTelefone.getText());
                    modelCliente.setCliNumCasa(this.jtfNumCasa.getText());
                    modelCliente.setCliDDDTel(this.jtfDDDTel.getText());
                    modelCliente.setCliPontoReferencia(this.jtfPontoDeReferencia.getText());

                } else {
                    salvarAlterar = "salvar";
                }

                if (salvarAlterar.equals("alterar")) {
                    if (controllerCliente.atualizarClienteController(modelCliente)) {
                        JOptionPane.showMessageDialog(this, "Cliente atualizado com sucesso", "Bom trabalho", JOptionPane.INFORMATION_MESSAGE);
                        //carregar clientes na tabela
                        carregarCliente();
                        this.desabilitaHabilitaCampos(false);
                        this.limparCampos();
                        //-------------Muda os dados na view de venda-----

                        if (viewVendasFinal != null) {
                            viewVendasFinal.habilitarDesabilitarCambos(true);
                            viewVendasFinal.habilitarDesabilitarCampCliente(false);
                            viewVendasFinal.atualizarCampos(modelCliente);
                            this.dispose();

                        }

                    } else {
                        JOptionPane.showMessageDialog(this, "Erro ao atualizar cliente, Entre em contato com a SSD", "Erro: 1301201020", JOptionPane.ERROR_MESSAGE);
                    }

                } else {
                    System.out.println("O cliente estava cadastrado mas o usuário optou por não atualizar os dados");

                }

            }

        }

    }//GEN-LAST:event_jbSalvarActionPerformed

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        // Exclui um produto no banco de dados
        int linha = jtCliente.getSelectedRow();
        int codigoCliente = (int) jtCliente.getValueAt(linha, 0);
        this.desabilitaHabilitaCampos(false);
        this.limparCampos();

        if (controllerCliente.excluirClienteController(codigoCliente)) {
            JOptionPane.showMessageDialog(this, "Cliente excluído com sucesso", "Bom trabalho", JOptionPane.INFORMATION_MESSAGE);
            this.carregarCliente();

        } else {
            JOptionPane.showMessageDialog(this, "Erro ao excluir o Cliente, consulto a SSD para mais detalhes", "OPS", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbExcluirActionPerformed

    public void alterarCliente(ModelCliente pModelCliente) {

        int codigoCliente = pModelCliente.getIdCliente();
        salvarAlterar = "alterar";

        modelCliente = controllerCliente.getClienteController(codigoCliente);

        if (modelCliente.getIdCliente() != 0) {
            jtfCodigo.setText(String.valueOf(modelCliente.getIdCliente()));
            jtfNome.setText(modelCliente.getCliNome());
            jtfEndereco.setText(modelCliente.getCliEndereco());
            jtfBairro.setText(modelCliente.getCliBairro());
            jtfCidade.setText(modelCliente.getCliCidade());
            jcbUF.setSelectedItem(modelCliente.getCliUf());
            jtfCep.setText(modelCliente.getCliCep());
            jtfTelefone.setText(modelCliente.getCliTelefone());
            jtfNumCasa.setText(modelCliente.getCliNumCasa());
            jtfDDDTel.setText(modelCliente.getCliDDDTel());
            jtfPontoDeReferencia.setText(modelCliente.getCliPontoReferencia());
            this.desabilitaHabilitaCampos(true);
            

        }

    }


    private void jbAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlterarActionPerformed
        // Altera o Cliente da interface e salva no banco de dados
        try {
            int linha = jtCliente.getSelectedRow();
            int codigoCliente = (int) jtCliente.getValueAt(linha, 0);
            salvarAlterar = "alterar";

            modelCliente = controllerCliente.getClienteController(codigoCliente);
            jtfCodigo.setText(String.valueOf(modelCliente.getIdCliente()));
            jtfNome.setText(modelCliente.getCliNome());
            jtfEndereco.setText(modelCliente.getCliEndereco());
            jtfBairro.setText(modelCliente.getCliBairro());
            jtfCidade.setText(modelCliente.getCliCidade());
            jcbUF.setSelectedItem(modelCliente.getCliUf());
            jtfCep.setText(modelCliente.getCliCep());
            jtfTelefone.setText(modelCliente.getCliTelefone());
            jtfNumCasa.setText(modelCliente.getCliNumCasa());
            jtfDDDTel.setText(modelCliente.getCliDDDTel());
            jtfPontoDeReferencia.setText(modelCliente.getCliPontoReferencia());
            this.desabilitaHabilitaCampos(true);

        } catch (IndexOutOfBoundsException e) {

            JOptionPane.showMessageDialog(this, "Selecione primeiro o cliente que deseja alterar", "Erro: 1301201107", JOptionPane.INFORMATION_MESSAGE);

        }


    }//GEN-LAST:event_jbAlterarActionPerformed
    /**
     * Chama a viewCliente já preencendo o telefone e o DDD recebidos da bina ou
     * digitado manualmente. Ao invocar o método eu preciso passar o parametro
     * alterar ou salvar para identificar se estou salvando ou alterando um
     * cliente existente.
     *
     * @param pSalvarAlterar
     * @param pTelefone
     * @param pDDD
     */
    public void novoCliente(String pSalvarAlterar, String pTelefone, String pDDD) {
        this.limparCampos();
        this.desabilitaHabilitaCampos(true);
        salvarAlterar = pSalvarAlterar;
        jtfTelefone.setText(pTelefone);
        this.jtfDDDTel.setText(pDDD);

    }

    private void jbNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNovoActionPerformed
        // TODO add your handling code here:
        salvarAlterar = "salvar";
        this.desabilitaHabilitaCampos(true);
        this.limparCampos();

    }//GEN-LAST:event_jbNovoActionPerformed

    private void jtClienteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtClienteFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jtClienteFocusGained

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        // TODO add your handling code here:
        this.desabilitaHabilitaCampos(false);
        this.limparCampos();
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        controllerCliente.gerarRelatorioCliente();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void btMinimizarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btMinimizarMouseReleased

        setExtendedState(ICONIFIED);
    }//GEN-LAST:event_btMinimizarMouseReleased

    private void btFecharMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btFecharMouseReleased
        // TODO add your handling code here:
        dispose(); //Fecha a ViewCliente
    }//GEN-LAST:event_btFecharMouseReleased

    private void barraDeMover1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_barraDeMover1MouseDragged
        /**
         * Quando qualquer botão do mouse é pressionado "Dragged" ele executa o
         * comando abaixo
         *
         */
        Point p = getLocation();//Serve para pegar a localização atual da janela e armazenar em "p".
        ////Enquanto o botão estiver sendo pressionado ele vai atribuindo uma nova posição para janela atual baseado na posição do mouse.
        setLocation(p.x + evt.getX() - point.x, p.y + evt.getY() - point.y);

    }//GEN-LAST:event_barraDeMover1MouseDragged

    private void barraDeMover1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_barraDeMover1MousePressed

        point.x = evt.getX();
        point.y = evt.getY();
    }//GEN-LAST:event_barraDeMover1MousePressed

    private void pesquisarCliente() {
        /**
         * Este método faz a referência cruzada no banco de dados entre 3 campos.
         * Nome, endereço e telefone.
         * de acordo com os 3 dados ele preenche uma lista com os clientes com estes dados.
         */
        ModelCliente modelClientePesquisa = new ModelCliente();
        ArrayList<ModelCliente> listaModelCliente;

        modelClientePesquisa.setCliNome(jtfNomePesquisa.getText());
        modelClientePesquisa.setCliEndereco(jtfEndePesquisa.getText());
        modelClientePesquisa.setCliTelefone(jtfTelPesquisa.getText());

        listaModelCliente = controllerCliente.getCliNomeTelEndereco(modelClientePesquisa);

        DefaultTableModel modelo = (DefaultTableModel) jtCliente.getModel();
        modelo.setNumRows(0);
        int cont = listaModelCliente.size();
        for (int i = 0; i < cont; i++) {

            modelo.addRow(new Object[]{
                listaModelCliente.get(i).getIdCliente(),
                listaModelCliente.get(i).getCliNome(),
                listaModelCliente.get(i).getCliEndereco() + "  Nº: " + listaModelCliente.get(i).getCliNumCasa(),
                listaModelCliente.get(i).getCliTelefone()
            });

        }

    }


    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        pesquisarCliente();

    }//GEN-LAST:event_jButton2ActionPerformed

    private void carregarCliente() {
        listaModelClientes = controllerCliente.getListaClienteController();
        DefaultTableModel modelo = (DefaultTableModel) jtCliente.getModel();
        modelo.setNumRows(0);
        int cont = listaModelClientes.size();
        for (int i = 0; i < cont; i++) {
            modelo.addRow(new Object[]{
                listaModelClientes.get(i).getIdCliente(),
                listaModelClientes.get(i).getCliNome(),
                listaModelClientes.get(i).getCliEndereco() + "  Nº: " + listaModelClientes.get(i).getCliNumCasa(),
                listaModelClientes.get(i).getCliTelefone()
            });

        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewClienteFinal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewClienteFinal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewClienteFinal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewClienteFinal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewClienteFinal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel barraDeMover1;
    private componentes.UJPanelImagem btFechar;
    private componentes.UJPanelImagem btMinimizar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbAlterar;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbNovo;
    private javax.swing.JButton jbSalvar;
    private javax.swing.JComboBox jcbUF;
    private javax.swing.JPanel jpPlanoDeFundo;
    private javax.swing.JTable jtCliente;
    private javax.swing.JTextField jtfBairro;
    private javax.swing.JFormattedTextField jtfCep;
    private javax.swing.JTextField jtfCidade;
    private javax.swing.JTextField jtfCodigo;
    private javax.swing.JTextField jtfDDDTel;
    private javax.swing.JTextField jtfEndePesquisa;
    private javax.swing.JTextField jtfEndereco;
    private javax.swing.JTextField jtfNome;
    private javax.swing.JTextField jtfNomePesquisa;
    private componentes.UJTextField jtfNumCasa;
    private javax.swing.JTextField jtfPontoDeReferencia;
    private javax.swing.JTextField jtfTelPesquisa;
    private javax.swing.JFormattedTextField jtfTelefone;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the viewVendasFinal
     */
    public ViewVendasFinal getViewVendasPop() {
        return viewVendasFinal;
    }

    /**
     * @param viewVendasFinal the viewVendasFinal to set
     */
    public void setViewVendasFrame(ViewVendasFinal viewVendasFinal) {
        this.viewVendasFinal = viewVendasFinal;
    }

    /**
     * @return the modelCliente
     */
    public ModelCliente getModelCliente() {
        return modelCliente;
    }

    /**
     * @param modelCliente the modelCliente to set
     */
    public void setModelCliente(ModelCliente modelCliente) {
        this.modelCliente = modelCliente;
    }

}
