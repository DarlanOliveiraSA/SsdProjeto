/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.ControllerCliente;
import controller.ControllerProdutos;
import controller.ControllerProdutosVendasProdutos;
import controller.ControllerVendas;
import controller.ControllerVendasCliente;
import controller.ControllerVendasProdutos;
import java.awt.event.KeyEvent;
import java.text.DecimalFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.ModelCliente;
import model.ModelProduto;
import model.ModelProdutosVendasProdutos;
import model.ModelVendas;
import model.ModelVendasCliente;
import model.ModelProdutosDaVenda;
import util.BLDatas;
import util.Calculos;
import util.Formatador;

/**
 * DESENVOLVIDO EM JAVA 8_91 PATCH - C:\ProgramData\Oracle\Java\javapath;
 * JAVAHOME - C:\Program Files\Java\jdk1.8.0_91
 *
 * @author Darlan
 */
public class ViewVendas extends javax.swing.JFrame {

    ControllerCliente controllerCliente = new ControllerCliente();
    ModelCliente modelCliente = new ModelCliente();
    ArrayList<ModelCliente> listaModelClientes = new ArrayList<>();
    ControllerProdutos controllerProdutos = new ControllerProdutos();
    ModelProduto modelProdutos = new ModelProduto(); //Cria um objeto do tipo produto
    ArrayList<ModelProduto> listaModelProdutos = new ArrayList<>();
    ArrayList<ModelVendasCliente> listaModelVendasClientes = new ArrayList<>();
    ControllerVendasCliente controllerVendasCliente = new ControllerVendasCliente();
    ControllerVendas controllerVendas = new ControllerVendas();
    ModelVendas modelVendas = new ModelVendas();
    BLDatas blDatas = new BLDatas();
    ControllerVendasProdutos controllerVendasProdutos = new ControllerVendasProdutos();
    ModelProdutosDaVenda modelVendasProdutos = new ModelProdutosDaVenda();
    ArrayList<ModelProdutosDaVenda> listaModelVendasProdutos = new ArrayList<>();
    ControllerProdutosVendasProdutos controllerProdutosVendasProdutos = new ControllerProdutosVendasProdutos();
    ModelProdutosVendasProdutos modelProdutosVendasProdutos = new ModelProdutosVendasProdutos();
    ArrayList<ModelProdutosVendasProdutos> listaModelProdutosVendasprodutos = new ArrayList<>();
    Formatador formatador = new Formatador();
    Calculos vender = new Calculos();
    String alterarSalvar = "salvar";
    ViewClienteAntiga viewCliente = new ViewClienteAntiga();

    /**
     * Creates new form ViewVendas
     */
    public ViewVendas() {
        initComponents();
        jcbTelefone.setVisible(false);
        listarClientesInicial();
        listarTelefonesInicial();
        listarProdutos();
        setLocationRelativeTo(null);
        carregarVendas();
        preencherCodigoClientePeloCombobox();
        preencherCodigoProdutoPeloCombobox();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jtpViewVendas = new javax.swing.JTabbedPane();
        jPCadastro = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jcbTelefone = new componentes.UJComboBox();
        jLabel21 = new javax.swing.JLabel();
        jtfDDDTelefone = new componentes.UJTextField();
        jLabel20 = new javax.swing.JLabel();
        jtfTelefone = new javax.swing.JTextField();
        jPanel13 = new javax.swing.JPanel();
        jbNovoCliente = new javax.swing.JButton();
        jbBuscarCliente = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jtfNumeroVenda = new javax.swing.JTextField();
        jbNovo = new javax.swing.JButton();
        jPanel28 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jtfNumCasa = new componentes.UJTextField();
        jPanel16 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jcbNomeCliente = new componentes.UJComboBox();
        jPanel15 = new javax.swing.JPanel();
        JtfEndereco = new componentes.UJTextField();
        jLabel10 = new javax.swing.JLabel();
        jPanel23 = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        jtfBairro = new componentes.UJTextField();
        jLabel17 = new javax.swing.JLabel();
        jPanel19 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jtfCidade = new componentes.UJTextField();
        jPanel20 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jtfEstado = new componentes.UJTextField();
        jPanel21 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtfCodigoCliente = new javax.swing.JTextField();
        jPanel29 = new javax.swing.JPanel();
        jPanel27 = new javax.swing.JPanel();
        jbAdicionar1 = new javax.swing.JButton();
        jPanel26 = new javax.swing.JPanel();
        jspQuantidade = new javax.swing.JSpinner();
        jLabel13 = new javax.swing.JLabel();
        jPanel25 = new javax.swing.JPanel();
        jcbNomeProduto = new componentes.UJComboBox();
        jLabel9 = new javax.swing.JLabel();
        jPanel24 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jtfCodigoProduto = new javax.swing.JTextField();
        jbAdicionar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtProdutosVenda = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jtfValorTotal = new javax.swing.JTextField();
        jbRemoverProdutos = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jtfRecebido = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jtfDesconto = new javax.swing.JTextField();
        jtfTroco = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jbSalvar = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();
        jPConsulta = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jtfTotalBruto = new javax.swing.JFormattedTextField();
        jLabel14 = new javax.swing.JLabel();
        jtfvisualizarDesconto = new javax.swing.JFormattedTextField();
        jLabel15 = new javax.swing.JLabel();
        jtfTotalLiquido = new javax.swing.JFormattedTextField();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtVisualizarVenda = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jtfPesquisa = new javax.swing.JTextField();
        jbPesquisar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtVendas = new javax.swing.JTable();
        jbNovo1 = new javax.swing.JButton();
        JbVisualizarVenda = new javax.swing.JButton();
        jbExcluir = new javax.swing.JButton();
        jbAlterar = new javax.swing.JButton();
        jbImprimirVenda = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jtpViewVendas.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        jtpViewVendas.setAutoscrolls(true);

        jScrollPane4.setHorizontalScrollBar(null);

        jPanel3.setBackground(new java.awt.Color(131, 187, 113));
        jPanel3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));
        jPanel11.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        jPanel11.setPreferredSize(new java.awt.Dimension(427, 160));

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));

        jcbTelefone.setAutocompletar(true);
        jcbTelefone.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                jcbTelefonePopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        jLabel21.setText("DDD");

        jtfDDDTelefone.setToolTipText("");

        jLabel20.setText("Telefone");

        jtfTelefone.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtfTelefoneMouseClicked(evt);
            }
        });
        jtfTelefone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfTelefoneKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jcbTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel12Layout.createSequentialGroup()
                            .addGap(11, 11, 11)
                            .addComponent(jLabel21)
                            .addGap(33, 33, 33)
                            .addComponent(jLabel20))
                        .addGroup(jPanel12Layout.createSequentialGroup()
                            .addComponent(jtfDDDTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 0, 0)
                            .addComponent(jtfTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, 0))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel21)
                    .addComponent(jLabel20))
                .addGap(3, 3, 3)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtfDDDTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addComponent(jcbTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jcbTelefone.setVisible(false);

        jPanel13.setBackground(new java.awt.Color(255, 255, 255));

        jbNovoCliente.setBackground(new java.awt.Color(61, 202, 117));
        jbNovoCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/iconfinder_sign-add_299068.png"))); // NOI18N
        jbNovoCliente.setText("Cliente Novo");
        jbNovoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNovoClienteActionPerformed(evt);
            }
        });

        jbBuscarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/iconfinder_sign-add_299068.png"))); // NOI18N
        jbBuscarCliente.setText("Buscar cliente");
        jbBuscarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jbNovoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jbBuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbNovoCliente)
                .addGap(0, 0, 0)
                .addComponent(jbBuscarCliente)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        jPanel10.setLayout(new java.awt.GridBagLayout());

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Numero do Pedido");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 27;
        gridBagConstraints.ipady = 15;
        jPanel10.add(jLabel3, gridBagConstraints);

        jtfNumeroVenda.setEditable(false);
        jtfNumeroVenda.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtfNumeroVenda.setText("999");
        jtfNumeroVenda.setBorder(null);
        jtfNumeroVenda.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 80;
        gridBagConstraints.ipady = 30;
        jPanel10.add(jtfNumeroVenda, gridBagConstraints);

        jbNovo.setBackground(new java.awt.Color(61, 202, 117));
        jbNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/iconfinder_sign-add_299068.png"))); // NOI18N
        jbNovo.setText("Novo Pedido");
        jbNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNovoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        jPanel10.add(jbNovo, gridBagConstraints);

        jPanel28.setBackground(new java.awt.Color(255, 255, 255));
        jPanel28.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));

        jPanel14.setBackground(new java.awt.Color(255, 255, 255));
        jPanel14.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));

        jPanel22.setBackground(new java.awt.Color(255, 255, 255));
        jPanel22.setAutoscrolls(true);

        jPanel17.setBackground(new java.awt.Color(255, 255, 255));

        jLabel16.setText("Nrº e Complemento");

        jtfNumCasa.setEnabled(false);
        jtfNumCasa.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 99, Short.MAX_VALUE))
            .addComponent(jtfNumCasa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfNumCasa, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE))
        );

        jPanel16.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setText("Nome Cliente");

        jcbNomeCliente.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jcbNomeCliente.setAutocompletar(true);
        jcbNomeCliente.setEnabled(false);
        jcbNomeCliente.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        jcbNomeCliente.setMinimumSize(new java.awt.Dimension(0, 20));
        jcbNomeCliente.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                jcbNomeClientePopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addContainerGap(109, Short.MAX_VALUE))
            .addComponent(jcbNomeCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcbNomeCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel15.setBackground(new java.awt.Color(255, 255, 255));

        JtfEndereco.setEnabled(false);
        JtfEndereco.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N

        jLabel10.setText("Rua / Av");

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addContainerGap(109, Short.MAX_VALUE))
                    .addComponent(JtfEndereco, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JtfEndereco, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(5, 5, 5)
                .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(5, 5, 5)
                .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel22Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(1, 1, 1))
        );

        jPanel23.setBackground(new java.awt.Color(255, 255, 255));

        jPanel18.setBackground(new java.awt.Color(255, 255, 255));

        jtfBairro.setEnabled(false);
        jtfBairro.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N

        jLabel17.setText("Bairro");

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addComponent(jLabel17)
                .addGap(0, 96, Short.MAX_VALUE))
            .addComponent(jtfBairro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel18Layout.createSequentialGroup()
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel19.setBackground(new java.awt.Color(255, 255, 255));

        jLabel19.setText("Cidade");

        jtfCidade.setEnabled(false);
        jtfCidade.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addComponent(jLabel19)
                .addContainerGap(106, Short.MAX_VALUE))
            .addComponent(jtfCidade, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel20.setBackground(new java.awt.Color(255, 255, 255));

        jLabel18.setText("UF");

        jtfEstado.setEnabled(false);
        jtfEstado.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18)
                    .addComponent(jtfEstado, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE))
                .addGap(1, 1, 1))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel21.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("Código Cli");

        jtfCodigoCliente.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        jtfCodigoCliente.setEnabled(false);
        jtfCodigoCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfCodigoClienteFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1)
            .addComponent(jtfCodigoCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfCodigoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(5, 5, 5)
                .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(5, 5, 5)
                .addComponent(jPanel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(5, 5, 5)
                .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel21, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel22, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jPanel23, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addComponent(jPanel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(5, 5, 5)
                .addComponent(jPanel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel28Layout = new javax.swing.GroupLayout(jPanel28);
        jPanel28.setLayout(jPanel28Layout);
        jPanel28Layout.setHorizontalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel28Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel28Layout.setVerticalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel28Layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel29.setBackground(new java.awt.Color(255, 255, 255));
        jPanel29.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));

        jPanel27.setBackground(new java.awt.Color(255, 255, 255));

        jbAdicionar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/iconfinder_sign-add_299068.png"))); // NOI18N
        jbAdicionar1.setText("Pesquisar Produto");
        jbAdicionar1.setEnabled(false);
        jbAdicionar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAdicionar1ActionPerformed(evt);
            }
        });
        jbAdicionar1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbAdicionar1KeyPressed(evt);
            }
        });

        jPanel26.setBackground(new java.awt.Color(255, 255, 255));

        jspQuantidade.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        jspQuantidade.setEnabled(false);
        jspQuantidade.setValue(1);
        jspQuantidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jspQuantidadeKeyPressed(evt);
            }
        });

        jLabel13.setText("Quantidade:");

        javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jspQuantidade)
            .addComponent(jLabel13)
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel26Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jspQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel25.setBackground(new java.awt.Color(255, 255, 255));

        jcbNomeProduto.setAutocompletar(true);
        jcbNomeProduto.setEnabled(false);
        jcbNomeProduto.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        jcbNomeProduto.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                jcbNomeProdutoPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        jcbNomeProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbNomeProdutoActionPerformed(evt);
            }
        });

        jLabel9.setText("Nome do Produto:");

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addComponent(jLabel9)
                .addContainerGap(64, Short.MAX_VALUE))
            .addComponent(jcbNomeProduto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel25Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcbNomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel24.setBackground(new java.awt.Color(255, 255, 255));

        jLabel4.setText("Cod. Prod.");

        jtfCodigoProduto.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        jtfCodigoProduto.setEnabled(false);
        jtfCodigoProduto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfCodigoProdutoFocusLost(evt);
            }
        });
        jtfCodigoProduto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtfCodigoProdutoMouseClicked(evt);
            }
        });
        jtfCodigoProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfCodigoProdutoKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addComponent(jLabel4)
                .addContainerGap(48, Short.MAX_VALUE))
            .addComponent(jtfCodigoProduto)
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfCodigoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jbAdicionar.setBackground(new java.awt.Color(61, 202, 117));
        jbAdicionar.setFont(new java.awt.Font("Arial", 0, 8)); // NOI18N
        jbAdicionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/iconfinder_sign-add_299068.png"))); // NOI18N
        jbAdicionar.setText("ADD. Produto");
        jbAdicionar.setEnabled(false);
        jbAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAdicionarActionPerformed(evt);
            }
        });
        jbAdicionar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbAdicionarKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel27Layout = new javax.swing.GroupLayout(jPanel27);
        jPanel27.setLayout(jPanel27Layout);
        jPanel27Layout.setHorizontalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbAdicionar1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel27Layout.setVerticalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel27Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbAdicionar)
                            .addComponent(jbAdicionar1)))
                    .addComponent(jPanel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel29Layout = new javax.swing.GroupLayout(jPanel29);
        jPanel29.setLayout(jPanel29Layout);
        jPanel29Layout.setHorizontalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel29Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel29Layout.setVerticalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jPanel27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));

        jtProdutosVenda.setAutoCreateRowSorter(true);
        jtProdutosVenda.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        jtProdutosVenda.setFont(new java.awt.Font("Arial", 0, 8)); // NOI18N
        jtProdutosVenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cod. Prod.", "Nome Produto", "Quant.", "Valor Un.", "Valor Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtProdutosVenda.setGridColor(new java.awt.Color(255, 255, 255));
        jtProdutosVenda.setMinimumSize(new java.awt.Dimension(0, 0));
        jtProdutosVenda.setSelectionBackground(new java.awt.Color(204, 204, 204));
        jtProdutosVenda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtProdutosVendaKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jtProdutosVenda);
        if (jtProdutosVenda.getColumnModel().getColumnCount() > 0) {
            jtProdutosVenda.getColumnModel().getColumn(0).setMinWidth(90);
            jtProdutosVenda.getColumnModel().getColumn(0).setPreferredWidth(90);
            jtProdutosVenda.getColumnModel().getColumn(0).setMaxWidth(90);
            jtProdutosVenda.getColumnModel().getColumn(2).setPreferredWidth(70);
            jtProdutosVenda.getColumnModel().getColumn(3).setPreferredWidth(90);
            jtProdutosVenda.getColumnModel().getColumn(4).setMinWidth(90);
            jtProdutosVenda.getColumnModel().getColumn(4).setPreferredWidth(90);
            jtProdutosVenda.getColumnModel().getColumn(4).setMaxWidth(90);
        }

        jLabel6.setBackground(new java.awt.Color(204, 204, 204));
        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText(" Valor total");
        jLabel6.setOpaque(true);

        jtfValorTotal.setEditable(false);
        jtfValorTotal.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jtfValorTotal.setForeground(new java.awt.Color(13, 143, 57));
        jtfValorTotal.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jtfValorTotal.setEnabled(false);

        jbRemoverProdutos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/iconfinder_trashcan_299071.png"))); // NOI18N
        jbRemoverProdutos.setText("Remover Produto");
        jbRemoverProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRemoverProdutosActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("Valor recebido:");

        jtfRecebido.setEnabled(false);
        jtfRecebido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfRecebidoKeyReleased(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Desconto:");

        jtfDesconto.setEnabled(false);
        jtfDesconto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfDescontoFocusLost(evt);
            }
        });
        jtfDesconto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfDescontoKeyReleased(evt);
            }
        });

        jtfTroco.setEditable(false);
        jtfTroco.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jtfTroco.setForeground(new java.awt.Color(13, 143, 57));
        jtfTroco.setEnabled(false);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setText("Troco:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jbRemoverProdutos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtfRecebido, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jtfDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel12)
                    .addComponent(jtfTroco, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtfValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbRemoverProdutos)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfRecebido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfTroco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(10, 10, 10))
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));

        jbSalvar.setBackground(new java.awt.Color(61, 202, 117));
        jbSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/iconfinder_floppy_285657.png"))); // NOI18N
        jbSalvar.setText("Salvar Pedido");
        jbSalvar.setEnabled(false);
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });

        jbCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/iconfinder_sign-error_299045.png"))); // NOI18N
        jbCancelar.setText("Cancelar Pedido");
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbCancelar)
                .addGap(18, 18, 18)
                .addComponent(jbSalvar)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbSalvar)
                    .addComponent(jbCancelar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel28, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, 416, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel29, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(5, 5, 5)
                .addComponent(jPanel28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jPanel29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jScrollPane4.setViewportView(jPanel3);

        javax.swing.GroupLayout jPCadastroLayout = new javax.swing.GroupLayout(jPCadastro);
        jPCadastro.setLayout(jPCadastroLayout);
        jPCadastroLayout.setHorizontalGroup(
            jPCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPCadastroLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 573, Short.MAX_VALUE))
        );
        jPCadastroLayout.setVerticalGroup(
            jPCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPCadastroLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(72, Short.MAX_VALUE))
        );

        jtpViewVendas.addTab("Cadastro", jPCadastro);

        jPanel9.setBackground(new java.awt.Color(131, 187, 113));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(136, 187, 221)));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Total Bruto");

        jtfTotalBruto.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setText("Desconto");

        jtfvisualizarDesconto.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setText("Total Liquido");

        jtfTotalLiquido.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(15, 15, 15)
                .addComponent(jtfTotalBruto, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jtfvisualizarDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jtfTotalLiquido, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jtfTotalBruto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfvisualizarDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(jtfTotalLiquido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(136, 187, 221), 1, true));

        jtVisualizarVenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cod. Prod.", "Nome Produto", "Quant.", "Valor Un.", "Valor Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtVisualizarVenda.setMinimumSize(new java.awt.Dimension(0, 0));
        jtVisualizarVenda.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(jtVisualizarVenda);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(126, 126, 126))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(136, 187, 221), 1, true));

        jLabel8.setText("Buscar venda pelo codigo:");

        jbPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/iconfinder_search_285651.png"))); // NOI18N
        jbPesquisar.setText("Pesquisar");
        jbPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPesquisarActionPerformed(evt);
            }
        });

        jtVendas.setAutoCreateRowSorter(true);
        jtVendas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nome Cliente", "Data"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtVendas.setMinimumSize(new java.awt.Dimension(0, 0));
        jtVendas.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jtVendas);
        if (jtVendas.getColumnModel().getColumnCount() > 0) {
            jtVendas.getColumnModel().getColumn(0).setMinWidth(110);
            jtVendas.getColumnModel().getColumn(0).setMaxWidth(110);
            jtVendas.getColumnModel().getColumn(2).setMinWidth(110);
            jtVendas.getColumnModel().getColumn(2).setMaxWidth(110);
        }

        jbNovo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/iconfinder_sign-add_299068.png"))); // NOI18N
        jbNovo1.setText("Novo");
        jbNovo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNovo1ActionPerformed(evt);
            }
        });

        JbVisualizarVenda.setText("Visualizar venda");
        JbVisualizarVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JbVisualizarVendaActionPerformed(evt);
            }
        });

        jbExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/iconfinder_trashcan_299071.png"))); // NOI18N
        jbExcluir.setText("Excluir");
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        jbAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/iconfinder_pencil_285638.png"))); // NOI18N
        jbAlterar.setText("Alterar");
        jbAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlterarActionPerformed(evt);
            }
        });

        jbImprimirVenda.setText("Imprimir venda");
        jbImprimirVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbImprimirVendaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(JbVisualizarVenda)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbImprimirVenda)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbExcluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbAlterar)
                        .addGap(4, 4, 4))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jtfPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbPesquisar)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbNovo1)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8)
                    .addComponent(jbNovo1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbPesquisar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jbExcluir)
                        .addComponent(jbAlterar))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(JbVisualizarVenda)
                        .addComponent(jbImprimirVenda)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPConsultaLayout = new javax.swing.GroupLayout(jPConsulta);
        jPConsulta.setLayout(jPConsultaLayout);
        jPConsultaLayout.setHorizontalGroup(
            jPConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPConsultaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPConsultaLayout.setVerticalGroup(
            jPConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPConsultaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jtpViewVendas.addTab("Vendas Realizadas", jPConsulta);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtpViewVendas, javax.swing.GroupLayout.PREFERRED_SIZE, 588, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jtpViewVendas, javax.swing.GroupLayout.PREFERRED_SIZE, 717, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        // Comando para excluir venda no menu (consultar / excluir / alterar)
        /**
         * Declaro o int linha para marcar a linha selecionada que quero excluir
         * Declaro o int códigoVenda que seleciona o código na linha declarada,
         * no caso a coluna fica 0 pois vou pegar apenas o código da venda na
         * linha selecionada
         */
        int linha = jtVendas.getSelectedRow();//marca a linha selecionada

        int codigoVenda = (int) jtVendas.getValueAt(linha, 0);//pega o código da venda da linha selecionada e salva na variavel codigoVenda
        listaModelProdutos = new ArrayList<>();//Cria uma nova ListaModelProdutos para evitar receber lixo de outras vendas
        listaModelProdutosVendasprodutos = controllerProdutosVendasProdutos.getListaProdutosVendasProdutosController(codigoVenda);// Após o sinal de = o comando cria um array com todos os produtos da venda seleceionada entre parenteses

        for (int i = 0; i < listaModelProdutosVendasprodutos.size(); i++) {//o ciclo se repete até terminar os produtos a serem excluídos
            modelProdutos = new ModelProduto();
            modelProdutos.setIdProduto(listaModelProdutosVendasprodutos.get(i).getModelProdutos().getIdProduto());//Busca na lista,..O ModelProduto e seta o id do produto, para cada produto da lista.

            modelProdutos.setProEstoque(//Atualiza o estoque após excluir os produtos
                    listaModelProdutosVendasprodutos.get(i).getModelProdutos().getProEstoque()//Busca no array lista,..O ModelProduto e dentro deste Model seta o estoque
                    + listaModelProdutosVendasprodutos.get(i).getModelProdutosDaVenda().getVenProQuantidadeVendida());//Busca no array lista,..O ModelProdutosDaVenda e dentro deste Model seta a quantidade vendida
            listaModelProdutos.add(modelProdutos);
        }

        if (controllerProdutos.alterarEstoqueProdutoController(listaModelProdutos)) {
            controllerVendasProdutos.excluirVendasProdutosController(codigoVenda);
            // Chamando o comando excluir, se o produto for excluído ele executa a mensagem de confirmação.
            if (controllerVendas.excluirVendasController(codigoVenda)) {
                System.out.println("Venda Excluída com sucesso");
                JOptionPane.showMessageDialog(this, "Venda Excluída com sucesso", "Tudo certo", JOptionPane.INFORMATION_MESSAGE);
                this.carregarVendas();
                DefaultTableModel model = (DefaultTableModel) jtVisualizarVenda.getModel();
                model.setNumRows(0);
                try {//Este try seleciona sempre a primeira linha da tabela após excluir uma venda, se não existir mais vendas ele muda para tela de cadastro de vendas
                    jtVendas.setRowSelectionInterval(0, 0);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Você não possui mais vendas, realize novas vendas para exibir algo aqui", "Atenção", JOptionPane.WARNING_MESSAGE);
                    jtpViewVendas.setSelectedIndex(0);
                }

            } else {
                //se cair neste erro significa que tem algo errado no codigoVenda que foi passado(Pode ser que ele não exista no banco e etc)
                JOptionPane.showMessageDialog(this, "Erro ao Excluir a venda, consulte o código de erro AE-EV1", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            //se cair neste erro é porquê tem algo errado na listaModelProdutos
            JOptionPane.showMessageDialog(this, "Erro ao Excluir a venda, consulte o código de erro AE-EV2", "Erro", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_jbExcluirActionPerformed

    private void jbAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlterarActionPerformed
        // TODO add your handling code here:

        try {

            habilitarDesabilitarCambos(true);

            alterarSalvar = "alterar";
            int linha = jtVendas.getSelectedRow();//linha selecionada na tabela de vendas realizadas
            int codigoVenda = (int) jtVendas.getValueAt(linha, 0); //pega o código da venda na linha selecionada
            listaModelProdutosVendasprodutos = controllerProdutosVendasProdutos.getListaProdutosVendasProdutosController(codigoVenda);//recupera a venda no banco
            DefaultTableModel modelo = (DefaultTableModel) jtProdutosVenda.getModel();//Usa a tabela como modelo
            modelo.setNumRows(0);//zera a tabela
            int qtdProdTabela = listaModelProdutosVendasprodutos.size();//vê a quantidade de produtos na tabela
            jcbNomeCliente.setSelectedItem((String) jtVendas.getValueAt(linha, 1));//Preenche o campo cliente, com o cliente da venda.
            preencherCodigoClientePeloCombobox();//preenche o código do cliente pelo combobox (usei isto para facilitar o preenchimento)
            double desconto = controllerVendas.getVendasController(codigoVenda).getVenDesconto();//retorna o valor do desconto salvo no banco de dados
            jtfDesconto.setText(String.valueOf(desconto));//aplica o desconto no jtf desconto
            jcbNomeCliente.setEnabled(false);//Desabilita o campo de nome e ID do cliente para não mudar o nome do cliente quando for alterar a venda
            jtfCodigoCliente.setEnabled(false);//Desabilita o campo de nome e ID do cliente para não mudar o nome do cliente quando for alterar a venda
            for (int i = 0; i < qtdProdTabela; i++) {

                //Seta no campo número da venda o id da venda já cadastrada
                jtfNumeroVenda.setText(String.valueOf(listaModelProdutosVendasprodutos.get(i).getModelProdutosDaVenda().getIdDaVenda()));
                //Preenche a tabela com os produtos da venda.
                modelo.addRow(new Object[]{
                    listaModelProdutosVendasprodutos.get(i).getModelProdutos().getIdProduto(),//ID atual do produto no banco
                    listaModelProdutosVendasprodutos.get(i).getModelProdutos().getProNome(),//Nome Atual do produto no banco
listaModelProdutosVendasprodutos.get(i).getModelProdutosDaVenda().getVenProQuantidadeVendida(),//quantidade vendida na data da compra
                    listaModelProdutosVendasprodutos.get(i).getModelProdutosDaVenda().getVenProValor(),//valor vendido na data da compra
                    listaModelProdutosVendasprodutos.get(i).getModelProdutosDaVenda().getVenProQuantidadeVendida()                    * listaModelProdutosVendasprodutos.get(i).getModelProdutosDaVenda().getVenProValor()//quantidade * valor = total
                });
            }
            somarValorTotalProdutos(); //soma todos os produtos e preenche o JTF total
            jtpViewVendas.setSelectedIndex(0); // MUDA PARA A GUIA PRINCIPAL DE VENDAS

        } catch (ArrayIndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(this, "Selecione a venda que deseja alterar", "ATENÇÃO", JOptionPane.INFORMATION_MESSAGE);
        }

    }//GEN-LAST:event_jbAlterarActionPerformed


    private void jbNovo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNovo1ActionPerformed
        // TODO add your handling code here:
        alterarSalvar = "salvar";
        habilitarDesabilitarCambos(true);//habilita os campos na guia 1 para editar
        jtpViewVendas.setSelectedIndex(0); // Muda para guia 1 janela cadastrar vendas
    }//GEN-LAST:event_jbNovo1ActionPerformed

    private void jbPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPesquisarActionPerformed
        // TODO add your handling code here:

        carregarVendas();
    }//GEN-LAST:event_jbPesquisarActionPerformed

    private void JbVisualizarVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JbVisualizarVendaActionPerformed
        // TODO add your handling code here:

        try {
            int linha = jtVendas.getSelectedRow();//linha selecionada na tabela de vendas realizadas
            int codigoVenda = (int) jtVendas.getValueAt(linha, 0); //pega o código da venda na linha selecionada
            listaModelProdutosVendasprodutos = controllerProdutosVendasProdutos.getListaProdutosVendasProdutosController(codigoVenda);//recupera a venda no banco
            DefaultTableModel modelo = (DefaultTableModel) jtVisualizarVenda.getModel();//Usa a tabela como modelo
            modelo.setNumRows(0);//zera a tabela
            int qtdProdTabela = listaModelProdutosVendasprodutos.size();//vê a quantidade de produtos na tabela

            double desconto = controllerVendas.getVendasController(codigoVenda).getVenDesconto();//retorna o valor do desconto salvo no banco de dados
            jtfvisualizarDesconto.setText(String.valueOf(desconto));//aplica o desconto no jtf desconto

            for (int i = 0; i < qtdProdTabela; i++) {

                //Seta no campo número da venda o id da venda já cadastrada
                //jtfNumeroVenda.setText(String.valueOf(listaModelProdutosVendasprodutos.get(i).getModelVendasProdutos().getVendas()));
                //Preenche a tabela com os produtos da venda.
                modelo.addRow(new Object[]{
                    listaModelProdutosVendasprodutos.get(i).getModelProdutos().getIdProduto(),//ID atual do produto no banco
                    listaModelProdutosVendasprodutos.get(i).getModelProdutos().getProNome(),//Nome Atual do produto no banco
listaModelProdutosVendasprodutos.get(i).getModelProdutosDaVenda().getVenProQuantidadeVendida(),//quantidade vendida na data da compra
                    listaModelProdutosVendasprodutos.get(i).getModelProdutosDaVenda().getVenProValor(),//valor vendido na data da compra
                    listaModelProdutosVendasprodutos.get(i).getModelProdutosDaVenda().getVenProQuantidadeVendida()                    * listaModelProdutosVendasprodutos.get(i).getModelProdutosDaVenda().getVenProValor()//quantidade * valor = total
                });
            }

            //soma todos os produtos e preenche o JTF total
            double soma = 0, valorPro, total, totalLiquido;
            int quantPro;
            int cont = jtVisualizarVenda.getRowCount();

            //repete o comando for de soma enquanto ainda existir linhas na tabela
            for (int i = 0; i < cont; i++) {
                quantPro = (int) jtVisualizarVenda.getValueAt(i, 2);
                valorPro = (double) jtVisualizarVenda.getValueAt(i, 3);
                total = quantPro * valorPro;

                soma = soma + total;

            }
            DecimalFormat arredondar = new DecimalFormat("0.00");
            totalLiquido = soma - desconto;

            jtfTotalLiquido.setText(String.valueOf(arredondar.format(totalLiquido)));
            jtfTotalBruto.setText(String.valueOf(arredondar.format(soma)));
            jtfvisualizarDesconto.setText(String.valueOf(arredondar.format(desconto)));
            carregarVendas();
            jtVendas.setRowSelectionInterval(linha, linha);
        } catch (ArrayIndexOutOfBoundsException e) {

            carregarVendas();
        }

    }//GEN-LAST:event_JbVisualizarVendaActionPerformed

    private void jtfCodigoClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfCodigoClienteFocusLost
        // TODO add your handling code here:
        modelCliente = controllerCliente.getClienteController(Integer.parseInt(jtfCodigoCliente.getText()));
        jcbNomeCliente.setSelectedItem(modelCliente.getCliNome());
    }//GEN-LAST:event_jtfCodigoClienteFocusLost

    private void jcbNomeClientePopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jcbNomeClientePopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        if (jcbNomeCliente.isPopupVisible()) {
            preencherCodigoClientePeloCombobox();
        }
    }//GEN-LAST:event_jcbNomeClientePopupMenuWillBecomeInvisible

    private void jtfCodigoProdutoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCodigoProdutoKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                if (!jtfCodigoProduto.getText().equals("")) {
                    adicionarProduto();
                }
                jtfCodigoProduto.setText("");

            } catch (Exception e) {
                preencherCodigoProdutoPeloCombobox();
            }
        }
    }//GEN-LAST:event_jtfCodigoProdutoKeyPressed

    private void jtfCodigoProdutoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfCodigoProdutoFocusLost
        // TODO add your handling code here:
        try {
            modelProdutos = controllerProdutos.retornarProdutoController(Integer.parseInt(jtfCodigoProduto.getText()));
            jcbNomeProduto.setSelectedItem(modelProdutos.getProNome());
        } catch (Exception e) {
            jcbNomeProduto.setPopupVisible(true);
        }
    }//GEN-LAST:event_jtfCodigoProdutoFocusLost

    private void jbNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNovoActionPerformed
        // Comando usado para zerar o formulário de cadastro e começar uma nova venda.
        int idDaVenda = controllerVendas.recuperarUltimaVendaController();
        idDaVenda++;
        habilitarDesabilitarCambos(true);
        limparFormulario();
        jtfNumeroVenda.setText(idDaVenda + "");
        System.out.println(idDaVenda);
        alterarSalvar = "salvar";
    }//GEN-LAST:event_jbNovoActionPerformed

    private void jspQuantidadeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jspQuantidadeKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            adicionarProduto();
        }
    }//GEN-LAST:event_jspQuantidadeKeyPressed

    private void jcbNomeProdutoPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jcbNomeProdutoPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        if (jcbNomeProduto.isVisible()) {
            preencherCodigoProdutoPeloCombobox();
        }
    }//GEN-LAST:event_jcbNomeProdutoPopupMenuWillBecomeInvisible

    private void jbAdicionarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbAdicionarKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            adicionarProduto();
        }
    }//GEN-LAST:event_jbAdicionarKeyPressed

    private void jbAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAdicionarActionPerformed
        // Este botão adiciona os produtos na tabela de cadastro de venda para posteriormente salvar a venda
        adicionarProduto(); // metodo antigo usado para chamar as vendas

    }//GEN-LAST:event_jbAdicionarActionPerformed

    private void jtProdutosVendaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtProdutosVendaKeyReleased
        // TODO add your handling code here:

        editarSelecao();
        somarValorTotalProdutos();
    }//GEN-LAST:event_jtProdutosVendaKeyReleased

    private void jtfRecebidoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfRecebidoKeyReleased
        // TODO add your handling code here:
        somarValorTotalProdutos();
    }//GEN-LAST:event_jtfRecebidoKeyReleased

    private void jtfDescontoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfDescontoKeyReleased
        // TODO add your handling code here:
        somarValorTotalProdutos();
    }//GEN-LAST:event_jtfDescontoKeyReleased

    private void jtfDescontoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfDescontoFocusLost
        //Ao perder o foco o JtfDesconto vai executar o seguinte comando
        somarValorTotalProdutos();
    }//GEN-LAST:event_jtfDescontoFocusLost

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        // TODO add your handling code here:
        habilitarDesabilitarCambos(false);
        limparFormulario();
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jbRemoverProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRemoverProdutosActionPerformed
        // TODO add your handling code here:
        try {
            int linha = jtProdutosVenda.getSelectedRow();//linha será igual a linha selecionada na tabela
            DefaultTableModel modelo = (DefaultTableModel) jtProdutosVenda.getModel();//cria uma instancia nova da tabela de vendas
            modelo.removeRow(linha);//comando que remove a linha selecionada na tabela
            somarValorTotalProdutos();//Soma novamente o total após excluir itens
        } catch (ArrayIndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(this, "Erro deletar, selecione uma linha. Se o problema persistir cunsulte a SSD e informe o código de erro ", "Erro - Código 1714", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbRemoverProdutosActionPerformed

    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed
        // TODO add your handling code here:

        int codigoVenda = 0, codigoProduto = 0;
        listaModelVendasProdutos = new ArrayList<>();
        double desconto = 0;
        //Tratamento do desconto, se o desconto estiver vazio ele vai setar zero.
        if (jtfDesconto.getText().equals("")) {
            desconto = 0;
        } else {
            desconto = formatador.converterVirgulaParaPontoReturn(jtfDesconto.getText());
        }
        //quando o id da venda NÃO estiver vazio ele recupera o número da venda
        if (!jtfNumeroVenda.getText().equals("")) {
            modelVendas.setIdVenda(Integer.parseInt(jtfNumeroVenda.getText()));
        }
        modelVendas.setCliente(Integer.parseInt(jtfCodigoCliente.getText()));
        try {
            modelVendas.setVenDataVenda(blDatas.converterDataParaDateUS(new java.util.Date(System.currentTimeMillis())));
        } catch (Exception e) {
            e.printStackTrace();
        }
        modelVendas.setVenValorLiquido(Double.parseDouble(jtfValorTotal.getText()));
        modelVendas.setVenValorBruto(Double.parseDouble(jtfValorTotal.getText()) + desconto);
        modelVendas.setVenDesconto(desconto);

        //O próximo if serve para escolher quando o evento vai salvar ou alterar a venda
        /**
         * SALVAR
         */
        if (alterarSalvar.equals("salvar")) {
            //Salvar vendas
            codigoVenda = controllerVendas.salvarVendasController(modelVendas);
            if (codigoVenda > 0) {

                //se o produto for cadastrado salvo no modelVendas vai executar este codigo
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao salvar venda, cunsulta a SSD e informe o código de erro VV-SV", "Erro", JOptionPane.ERROR_MESSAGE);
            }

            int cont = jtProdutosVenda.getRowCount();
            for (int i = 0; i < cont; i++) {
                codigoProduto = (int) jtProdutosVenda.getValueAt(i, 0);
                //venda
                modelVendasProdutos = new ModelProdutosDaVenda();//Cria um novo ModelVendas para não ficar nehum lixo das vendas anteriores
                modelProdutos = new ModelProduto();//Cria um novo ModelProduto para não ficar nehum lixo das vendas anteriores
                modelVendasProdutos.setProduto(codigoProduto);
                modelVendasProdutos.setIdDaVenda(codigoVenda);
                modelVendasProdutos.setVenProQuantidadeVendida(Integer.parseInt(jtProdutosVenda.getValueAt(i, 2).toString()));//Busca a quantidade de produtos na tabela jtProdutos
                modelVendasProdutos.setVenProValor((double) jtProdutosVenda.getValueAt(i, 3));//Busca o valor unitário do produto na tabela jtProdutos
                //produtos da venda
                modelProdutos.setIdProduto(codigoProduto);//Salva o id do produto deste cliclo de for no modelProdutos
                //Atualiza o estoque do produto abatendo o que foi vendido
                modelProdutos.setProEstoque(
                        controllerProdutos.retornarProdutoController(codigoProduto).getProEstoque()//
                        - Integer.parseInt(jtProdutosVenda.getValueAt(i, 2).toString()));
                listaModelVendasProdutos.add(modelVendasProdutos);
                listaModelProdutos.add(modelProdutos);

            }
            //Salvar lista de protudos da vendas no banco de dados
            if (controllerVendasProdutos.salvarVendasProdutosController(listaModelVendasProdutos)) {
                //Alterar estoque dos produtos da venda atual
                controllerProdutos.alterarEstoqueProdutoController(listaModelProdutos);
                carregarVendas();
                limparFormulario();
                habilitarDesabilitarCambos(false);
                jtfRecebido.setText("0");//zera o valor recebido quando clica em alterar venda
                jtVendas.setRowSelectionInterval(jtVendas.getRowCount() - 1, jtVendas.getRowCount() - 1); //Seleciona a ultima linha da tabela

                jtpViewVendas.setSelectedIndex(1); // Muda para guia 2 janela consultar vendas
                JOptionPane.showMessageDialog(this, "Venda salva com sucesso", "Obrigado", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao salvar produtos, cunsulta a SSD e informe o código de erro VV-SPV", "Erro", JOptionPane.ERROR_MESSAGE);
            }

        } else {
            /**
             * ALTERAR
             */
            //Se a opção Excluída for diferente de salvar ou seja ALTERAR
            //INICIO RETORNAR O ESTOQUE E ECLUIR OS "PRODUTOS" DA VENDA

            int linha = jtVendas.getSelectedRow();
            codigoVenda = (int) jtVendas.getValueAt(linha, 0);
            listaModelProdutos = new ArrayList<>();//cria uma nova lista de produtos
            listaModelProdutosVendasprodutos = controllerProdutosVendasProdutos.getListaProdutosVendasProdutosController(codigoVenda);//recupera a venda no banco de dados pelo código da venda

            for (int i = 0; i < listaModelProdutosVendasprodutos.size(); i++) {
                modelProdutos = new ModelProduto();//zera o model produtos (aqui contem os atributos do produto)
                modelProdutos.setIdProduto(listaModelProdutosVendasprodutos.get(i).getModelProdutos().getIdProduto());

                modelProdutos.setProEstoque(
                        listaModelProdutosVendasprodutos.get(i).getModelProdutos().getProEstoque()
                        + listaModelProdutosVendasprodutos.get(i).getModelProdutosDaVenda().getVenProQuantidadeVendida()
                );

                listaModelProdutos.add(modelProdutos);
            }

            if (controllerProdutos.alterarEstoqueProdutoController(listaModelProdutos)) {
                if (controllerVendasProdutos.excluirVendasProdutosController(codigoVenda)) {
                    // Chamando o comando excluir, se o produto for excluído ele executa a mensagem de confirmação.

                    //se a venda for excluída com sucesso vai executar isto
                    this.carregarVendas();

                } else {
                    JOptionPane.showMessageDialog(this, "Erro ao remover do estoque os produtos, consulte o código de erro AE-EV1", "Erro", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao Excluir a venda, consulte o código de erro AE-EV2", "Erro", JOptionPane.ERROR_MESSAGE);
            }
            //FIM RETORNAR O ESTOQUE E EXCLUIR OS "PRODUTOS" DA VENDA
            //ATUALIZAR TABELA DE VENDAS
            if (controllerVendas.atualizarVendasController(modelVendas)) {
                //se conseguir atualizar a venda vai executar este comando
                jtpViewVendas.setSelectedIndex(1); // Muda para guia 2 janela consultar vendas
                habilitarDesabilitarCambos(false);//desabilita os campos e o botão salvar quando estiver alterando
                this.carregarVendas();//Carrega as vendas na guia 2
                jtfRecebido.setText("0");//zera o valor recebido quando clica em alterar venda
                jtfTroco.setText("0");//zera o troco quando clica em alterar venda

            } else {
                JOptionPane.showMessageDialog(this, "Erro ao Alterar venda, consulte o código de erro EA-AV1", "Erro", JOptionPane.ERROR_MESSAGE);
            }

            //INICIO SALVAR NOVAMENTEA A TABELA NO BANCO DE DADOS APÓS ALTERAR
            //O comando anterior apaga toda a tabela, por isto precisa desta segunda etapa.
            int cont = jtProdutosVenda.getRowCount();
            for (int i = 0; i < cont; i++) {
                codigoProduto = (int) jtProdutosVenda.getValueAt(i, 0);
                //venda
                modelVendasProdutos = new ModelProdutosDaVenda();
                modelProdutos = new ModelProduto();//zera a lista de produtos para não ficar nehum lixo das vendas anteriores
                modelVendasProdutos.setProduto(codigoProduto);
                modelVendasProdutos.setIdDaVenda(codigoVenda);
                modelVendasProdutos.setVenProQuantidadeVendida(Integer.parseInt(jtProdutosVenda.getValueAt(i, 2).toString()));
                modelVendasProdutos.setVenProValor((double) jtProdutosVenda.getValueAt(i, 3));
                //produtos da venda
                modelProdutos.setIdProduto(codigoProduto);
                //Salva o estoque abatendo o que foi vendido
                modelProdutos.setProEstoque(
                        controllerProdutos.retornarProdutoController(codigoProduto).getProEstoque()
                        - Integer.parseInt(jtProdutosVenda.getValueAt(i, 2).toString()));
                listaModelVendasProdutos.add(modelVendasProdutos);
                listaModelProdutos.add(modelProdutos);

            }
            //FIM SALVAR NOVAMENTEA TABELA SELECIONADA NA VENDA QUE ESTÁ SENDO ALTERADA
            //SALVAR PRODUTOS DA VENDA
            if (controllerVendasProdutos.salvarVendasProdutosController(listaModelVendasProdutos)) {
                JOptionPane.showMessageDialog(this, "Alteração salva com sucesso", "Tudo certo", JOptionPane.INFORMATION_MESSAGE);
                carregarVendas();
                limparFormulario();

            } else {
                JOptionPane.showMessageDialog(this, "Erro ao Salvar os produtos ao alterar venda, consulte o código de erro EA-AV2", "Erro", JOptionPane.ERROR_MESSAGE);
            }

        }

    }//GEN-LAST:event_jbSalvarActionPerformed

    private void jbNovoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNovoClienteActionPerformed

        String telefone = jtfTelefone.getText();
        String ddd = jtfDDDTelefone.getText();
        viewCliente.novoCliente("salvar", telefone, ddd);
        viewCliente.setVisible(true);
        System.out.println("o telefone passado foi: " + ddd + telefone);
        System.out.println(this.viewCliente.salvarAlterar);

    }//GEN-LAST:event_jbNovoClienteActionPerformed

    private void telefoneInexistente() {
        jtfBairro.setText("");
        jtfCidade.setText("");
        jtfCodigoCliente.setText("");
        jtfEstado.setText("");
        jtfNumCasa.setText("");
        JtfEndereco.setText("");
        jcbNomeCliente.setSelectedItem("");
    }

    private boolean checarSeClienteExiste(String pTel) {
        ModelCliente modelClienteX = new ModelCliente();
        modelClienteX = controllerCliente.getClienteTelefoneController(pTel);
        if (modelClienteX.getCliTelefone() != null) {

            if (modelClienteX.getCliTelefone().equals(pTel)) {
                System.out.println("O Cliente existe, preenchendo dados");
                atualizarCampos(modelClienteX);
                return true;
            }

        } else {
            telefoneInexistente();
            System.out.println("O Cliente não existe no banco, telefone deu null");
            return false;
        }

        return false;
    }

    

    private void jtfTelefoneKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfTelefoneKeyReleased
        // TODO add your handling code here:
        ModelCliente modelClienteX = new ModelCliente();
        jcbTelefone.setSelectedItem(jtfTelefone.getText());
        jcbTelefone.setAutocompletar(true);
        String cbTelefone = jcbTelefone.getSelectedItem().toString();
        String tfTelefone = jtfTelefone.getText();
        int tamanhoDoCb = (int) cbTelefone.length();
        int tamanhoDoTF = (int) tfTelefone.length();
        int autoCompletar = tamanhoDoCb - tamanhoDoTF;
        if (cbTelefone.equals(tfTelefone)) {
            System.out.println("Telefone completo, buscando dados no banco");
            if (checarSeClienteExiste(tfTelefone)) {
                autoCompletar(tfTelefone);
            }
        } else if (autoCompletar > 0) {
            if (evt.getKeyCode() != KeyEvent.VK_BACK_SPACE & evt.getKeyCode() != KeyEvent.VK_DELETE) {
                jtfTelefone.setText(cbTelefone);
                jtfTelefone.select(tamanhoDoTF, tamanhoDoCb);
                System.out.println("Autocompletar é maior que 0, autocompletando...");

                autoCompletar(jtfTelefone.getText());
                habilitarDesabilitarCambos(true);

            }
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            System.out.println("Apertou Enter e chamou evento");
            if (checarSeClienteExiste(jtfTelefone.getText())) {
                preencherCodigoClientePelotelefoneCB();
                habilitarDesabilitarCambos(true);
                jtfCodigoProduto.requestFocus();
                jtfCodigoProduto.selectAll();
            } else {
                viewCliente.novoCliente("salvar", jtfTelefone.getText(), jtfDDDTelefone.getText());
                viewCliente.setVisible(true);
                this.viewCliente.setViewVendasFrame(this);
                System.out.println("O cliente não existe no banco, abrindo tela para criar novo cliente");
                System.out.println("Telefone: " + viewCliente.viewVendasPop.jtfTelefone.getText());
            }

        }


    }//GEN-LAST:event_jtfTelefoneKeyReleased

    public void autoCompletar(String Tel) {
        modelCliente = new ModelCliente();
        modelCliente = controllerCliente.getClienteTelefoneController(Tel);
        jtfCidade.setText(modelCliente.getCliCidade());
        jcbNomeCliente.setSelectedItem(modelCliente.getCliNome());
        JtfEndereco.setText(modelCliente.getCliEndereco());
        jtfNumCasa.setText(modelCliente.getCliNumCasa());
        jtfBairro.setText(modelCliente.getCliBairro());
        jtfCidade.setText(modelCliente.getCliCidade());
        jtfEstado.setText(modelCliente.getCliUf());
        jtfCodigoCliente.setText(modelCliente.getIdCliente() + "");
    }


    private void jcbNomeProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbNomeProdutoActionPerformed
        // TODO add your handling code here:

        if (evt.getActionCommand().equals("comboBoxEdited")) {
            adicionarProduto();
        }
    }//GEN-LAST:event_jcbNomeProdutoActionPerformed

    private void jtfCodigoProdutoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtfCodigoProdutoMouseClicked
        // TODO add your handling code here:

        jtfCodigoProduto.setSelectionStart(0);
        jtfCodigoProduto.setSelectionEnd(100);
    }//GEN-LAST:event_jtfCodigoProdutoMouseClicked

    private void jbImprimirVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbImprimirVendaActionPerformed
        // TODO add your handling code here:
        int linha = jtVendas.getSelectedRow();
        int codigoVenda = (int) jtVendas.getValueAt(linha, 0);

        controllerVendas.gerarRelatoriovenda(codigoVenda);

    }//GEN-LAST:event_jbImprimirVendaActionPerformed

    private void jtfTelefoneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtfTelefoneMouseClicked
        // TODO add your handling code here:
        jtfTelefone.selectAll();
    }//GEN-LAST:event_jtfTelefoneMouseClicked

    private void jbBuscarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jbBuscarClienteActionPerformed

    private void jbAdicionar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAdicionar1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jbAdicionar1ActionPerformed

    private void jbAdicionar1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbAdicionar1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jbAdicionar1KeyPressed

    private void jcbTelefonePopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jcbTelefonePopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        preencherCodigoClientePelotelefoneCB();
    }//GEN-LAST:event_jcbTelefonePopupMenuWillBecomeInvisible

    private void editarSelecao() {
        int linhaSelecionada = jtProdutosVenda.getSelectedRow();//linha selecionada na tabela
        int quant = (int) jtProdutosVenda.getValueAt(linhaSelecionada, 2);
        double valor = (double) jtProdutosVenda.getValueAt(linhaSelecionada, 3);
        DefaultTableModel modelo = (DefaultTableModel) jtProdutosVenda.getModel();
        double total = quant * valor;
        modelo.setValueAt(total, linhaSelecionada, 4);

    }

    private void adicionarProduto() {
        int proCodigo = Integer.parseInt(jtfCodigoProduto.getText());
        modelProdutos = new ModelProduto();

        modelProdutos = controllerProdutos.retornarProdutoController(Integer.parseInt(proCodigo + ""));

        int quantidade = Integer.parseInt(jspQuantidade.getValue().toString());
        boolean salvou = false;

        if (jspQuantidade.getValue().equals("")) {
            JOptionPane.showMessageDialog(this, "Você precisa preencher a quantidade de produtos", "Atenção", JOptionPane.WARNING_MESSAGE);
        } else {

            DefaultTableModel modelo = (DefaultTableModel) jtProdutosVenda.getModel();

            try {

                /**
                 * Se a tabela estiver vazia ele adiciona o produto sem
                 * restrições
                 */
                if (modelo.getRowCount() <= 0) {
                    modelo.addRow(new Object[]{
                        modelProdutos.getIdProduto(),
                        modelProdutos.getProNome(),
                        quantidade,
                        modelProdutos.getProValor(),
                        quantidade * modelProdutos.getProValor()

                    });
                    salvou = true;
                    System.out.println("Não tinha linha, adicionando linha com produto 1");

                }
                /**
                 * Se a tabela NÃO estiver vazia, ele verifica se o produto
                 * existe
                 */
                if (!salvou) {
                    for (int i = 0; i < modelo.getRowCount(); i++) {

                        int produtoBuscado = Integer.parseInt(modelo.getValueAt(i, 0) + "");

                        /**
                         * Verifica se o produto existe na tabela, se ele
                         * existir incrementa, caso contrário ele continua no
                         * ELSE
                         */
                        if (produtoBuscado == proCodigo) {

                            int quantAtual = Integer.parseInt(modelo.getValueAt(i, 2) + "");
                            int quantNova = quantAtual + quantidade;
                            double preco = Double.parseDouble(modelo.getValueAt(i, 3) + "");
                            modelo.setValueAt(preco, i, 3);
                            modelo.setValueAt(quantNova, i, 2);
                            modelo.setValueAt(quantNova * preco, i, 4);

                            salvou = true;
                            System.out.println("Incrementou a quantidade de produtos ");

                        }

                    }
                    if (!salvou) {
                        modelo.addRow(new Object[]{
                            modelProdutos.getIdProduto(),
                            modelProdutos.getProNome(),
                            quantidade,
                            modelProdutos.getProValor(),
                            quantidade * modelProdutos.getProValor()

                        });
                        salvou = true;
                        System.out.println("Lista tem produtos mas o produto adicionado é novo, adicionando linha com produto 2");

                    }

                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Produto não cadastrado, verifique a lista ao lado", "Atenção", JOptionPane.WARNING_MESSAGE);
                jcbNomeProduto.requestFocus();
                jcbNomeProduto.setSelectedIndex(0);

            }

            somarValorTotalProdutos();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewVendas().setVisible(true);
            }
        });
    }

    private void atualizarCampos(ModelCliente pModelCliente) {
        modelCliente = pModelCliente;
        jtfCidade.setText(modelCliente.getCliCidade());
        jtfDDDTelefone.setText(modelCliente.getCliDDDTel());
        jcbTelefone.setSelectedItem(modelCliente.getCliTelefone());
        jcbNomeCliente.setSelectedItem(modelCliente.getCliNome());
        JtfEndereco.setText(modelCliente.getCliEndereco());
        jtfNumCasa.setText(modelCliente.getCliNumCasa());
        jtfBairro.setText(modelCliente.getCliBairro());
        jtfCidade.setText(modelCliente.getCliCidade());
        jtfEstado.setText(modelCliente.getCliUf());
        jtfTelefone.setText(modelCliente.getCliTelefone());
        jtfCodigoCliente.setText(modelCliente.getIdCliente() + "");
    }

    //Preenche os JTF com o código do cliente selecionado no combobox
    private void preencherCodigoClientePeloCombobox() {
        modelCliente = new ModelCliente();
        modelCliente = controllerCliente.getClienteController(jcbNomeCliente.getSelectedItem().toString());
        jtfCodigoCliente.setText(String.valueOf(modelCliente.getIdCliente()));
        jcbTelefone.setSelectedItem(modelCliente.getCliTelefone());
        atualizarCampos(this.modelCliente);
    }

    private void preencherCodigoClientePelotelefoneCB() {
        modelCliente = new ModelCliente();
        modelCliente = controllerCliente.getClienteTelefoneController(jcbTelefone.getSelectedItem().toString());
        atualizarCampos(this.modelCliente);

    }

    //Preenche os JTF com o código do produto selecionado no combobox
    private void preencherCodigoProdutoPeloCombobox() {
        modelProdutos = controllerProdutos.retornarProdutoController(jcbNomeProduto.getSelectedItem().toString());
        jtfCodigoProduto.setText(String.valueOf(modelProdutos.getIdProduto()));
    }

    /**
     * Preenche o combobox com todos os clientes do banco de dados
     */
    private void listarClientesInicial() {
        listaModelClientes = controllerCliente.getListaClienteController();
        jcbNomeCliente.removeAllItems();
        for (int i = 0; i < listaModelClientes.size(); i++) {
            jcbNomeCliente.addItem(listaModelClientes.get(i).getCliNome());
        }
    }

    /**
     * Preenche o combobox com todos os telefones de clientes do banco de dados
     */
    private void listarTelefonesInicial() {
        listaModelClientes = controllerCliente.getListaClienteController();
        jcbTelefone.removeAllItems();
        for (int i = 0; i < listaModelClientes.size(); i++) {
            jcbTelefone.addItem(listaModelClientes.get(i).getCliTelefone());
        }
    }

    /**
     * Preenche o combobox com todos os produtos do banco de dados
     */
    private void listarProdutos() {
        listaModelProdutos = controllerProdutos.retornarListaProdutoController();
        jcbNomeProduto.removeAllItems();
        for (int i = 0; i < listaModelProdutos.size(); i++) {
            jcbNomeProduto.addItem(listaModelProdutos.get(i).getProNome());
        }
    }

    /**
     * Este comando aplica um desconto ao valor final da venda
     */
    private void aplicarDescontos() {

        try {
            double desconto = formatador.converterVirgulaParaPontoReturn((jtfDesconto.getText()));
            jtfValorTotal.setText(String.valueOf(
                    Double.parseDouble(jtfValorTotal.getText()) - desconto));
        } catch (NumberFormatException e) {
        }

    }

    /**
     * Este comando soma todos os produtos da tabela de venda este comando serve
     * apenas para somar mesmo
     */
    private void somarValorTotalProdutos() {

        double soma = 0, valorPro, total;
        int quantPro;
        int cont = jtProdutosVenda.getRowCount();

        //repete o comando for de soma enquanto ainda existir linhas na tabela
        for (int i = 0; i < cont; i++) {
            quantPro = (int) jtProdutosVenda.getValueAt(i, 2);
            valorPro = (double) jtProdutosVenda.getValueAt(i, 3);
            total = quantPro * valorPro;

            soma = soma + total;

        }

        jtfValorTotal.setText(String.valueOf(soma));
        aplicarDescontos();
        calcularTroco();

    }

    private void calcularTroco() {

        double recebido, troco, total;
        total = Double.parseDouble(jtfValorTotal.getText());
        try {
            recebido = formatador.converterVirgulaParaPontoReturn((jtfRecebido.getText()));

        } catch (NumberFormatException e) {

            recebido = 0;
        }
        troco = recebido - total;
        if (troco >= 0) {
            jtfTroco.setText(String.valueOf("R$" + troco));

        } else {
            jtfTroco.setText(String.valueOf("R$ " + "0"));

        }
    }

    /**
     * Recarrega a tabela das vendas realizadas, na guia 2
     */
    private void carregarVendas() {

        DefaultTableModel modelo = (DefaultTableModel) jtVendas.getModel();
        listaModelVendasClientes = controllerVendasCliente.getListaVendasClienteController();

        int cont = listaModelVendasClientes.size();
        //Limpa tabela antes de carregar
        modelo.setNumRows(0);
        for (int i = 0; i < cont; i++) {
            modelo.addRow(new Object[]{
                listaModelVendasClientes.get(i).getModelVendas().getIdVenda(),
                listaModelVendasClientes.get(i).getModelCliente().getCliNome(),
                listaModelVendasClientes.get(i).getModelVendas().getVenDataVenda()
            });
        }
    }

    /**
     * Limpa os dados da minha tela de cadastro de vendas, usado para zerar a
     * venda e registrar uma nova
     */
    private void limparFormulario() {
        jtfDesconto.setText("");
        jtfValorTotal.setText("");
        jtfNumeroVenda.setText("");
        DefaultTableModel modelo = (DefaultTableModel) jtProdutosVenda.getModel();
        //Limpa tabela antes de carregar
        modelo.setNumRows(0);
    }

    public void habilitarDesabilitarCambos(boolean status) {

        jcbNomeCliente.setEnabled(status);
        jtfCodigoCliente.setEnabled(status);
        jcbNomeProduto.setEnabled(status);
        jtfCodigoProduto.setEnabled(status);
        jbSalvar.setEnabled(status);
        jbAdicionar.setEnabled(status);
        jspQuantidade.setEnabled(status);
        jtfRecebido.setEnabled(status);
        jtfDesconto.setEnabled(status);
        jtfTroco.setEnabled(status);
        JtfEndereco.setEnabled(status);
        jtfBairro.setEnabled(status);
        jtfCidade.setEnabled(status);
        jcbTelefone.setEnabled(status);
        jtfNumCasa.setEnabled(status);
        jtfEstado.setEnabled(status);
        jtfDDDTelefone.setEnabled(status);

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JbVisualizarVenda;
    private componentes.UJTextField JtfEndereco;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPCadastro;
    private javax.swing.JPanel jPConsulta;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton jbAdicionar;
    private javax.swing.JButton jbAdicionar1;
    private javax.swing.JButton jbAlterar;
    private javax.swing.JButton jbBuscarCliente;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbImprimirVenda;
    private javax.swing.JButton jbNovo;
    private javax.swing.JButton jbNovo1;
    private javax.swing.JButton jbNovoCliente;
    private javax.swing.JButton jbPesquisar;
    private javax.swing.JButton jbRemoverProdutos;
    private javax.swing.JButton jbSalvar;
    private componentes.UJComboBox jcbNomeCliente;
    private componentes.UJComboBox jcbNomeProduto;
    private componentes.UJComboBox jcbTelefone;
    private javax.swing.JSpinner jspQuantidade;
    private javax.swing.JTable jtProdutosVenda;
    private javax.swing.JTable jtVendas;
    private javax.swing.JTable jtVisualizarVenda;
    private componentes.UJTextField jtfBairro;
    private componentes.UJTextField jtfCidade;
    private javax.swing.JTextField jtfCodigoCliente;
    private javax.swing.JTextField jtfCodigoProduto;
    private componentes.UJTextField jtfDDDTelefone;
    private javax.swing.JTextField jtfDesconto;
    private componentes.UJTextField jtfEstado;
    private componentes.UJTextField jtfNumCasa;
    private javax.swing.JTextField jtfNumeroVenda;
    private javax.swing.JTextField jtfPesquisa;
    private javax.swing.JTextField jtfRecebido;
    private javax.swing.JTextField jtfTelefone;
    private javax.swing.JFormattedTextField jtfTotalBruto;
    private javax.swing.JFormattedTextField jtfTotalLiquido;
    private javax.swing.JTextField jtfTroco;
    private javax.swing.JTextField jtfValorTotal;
    private javax.swing.JFormattedTextField jtfvisualizarDesconto;
    private javax.swing.JTabbedPane jtpViewVendas;
    // End of variables declaration//GEN-END:variables
}
