public void imprimir(String pTextoASerImpresso) {

        try {
            InputStream prin = new ByteArrayInputStream(pTextoASerImpresso.getBytes("8859_1"));
            DocFlavor docFlavor = DocFlavor.INPUT_STREAM.TEXT_PLAIN_UTF_8;
            SimpleDoc documentoTextos = new SimpleDoc(prin, docFlavor, null);
            PrintService impressor = PrintServiceLookup.lookupDefaultPrintService();
            //Seleciona a impressora padrão
            HashPrintRequestAttributeSet printAttributes = new HashPrintRequestAttributeSet();
            printAttributes.add(new JobName("impressao", null));
            printAttributes.add(OrientationRequested.PORTRAIT);
            printAttributes.add(MediaSizeName.ISO_A4);
            //Informa o tipo de folha

            DocPrintJob printJob = impressor.createPrintJob();

            try {
                printJob.print(documentoTextos, (PrintRequestAttributeSet) printAttributes);
                System.out.println("Foi impresso: \n\r"+pTextoASerImpresso);
                //tenta Imprimir
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Não foi possível realizar impressão", "Erro", JOptionPane.ERROR_MESSAGE);
                //mostra mensagem de erro se não conseguir imprimir
            }
            prin.close();
        } catch (Exception e) {
          e.printStackTrace();
        }
    }
    
    private static PrintService impressora;
 
    // O metodo verifica se existe impressora conectada e a
    // define como padrao.
    public void detectaImpressoras() {
        try {
            DocFlavor df = DocFlavor.SERVICE_FORMATTED.PRINTABLE;
            PrintService[] ps = PrintServiceLookup.lookupPrintServices(df, null);

            for (PrintService p: ps) {
                System.out.println("Impressora encontrada: " + p.getName());
                impressora = p;
                /*if (p.getName().contains("Text") || p.getName().contains("Generic"))  {
	            System.out.println("Impressora Selecionada: " + p.getName());
                    impressora = p;
                    break;
                }*/
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    public synchronized boolean imprimira(String texto) {
        // se nao existir impressora, entao avisa usuario
        // senao imprime texto
        if (impressora == null) {
            String msg = "Nennhuma impressora foi encontrada. Instale uma impressora padrão \r\n(Generic Text Only) e reinicie o programa.";
	    System.out.println(msg);
        } else {
            try {
                DocPrintJob dpj = impressora.createPrintJob();
                InputStream stream = new ByteArrayInputStream(texto.getBytes(StandardCharsets.UTF_8));
                DocFlavor flavor = DocFlavor.INPUT_STREAM.AUTOSENSE;
                Doc doc = new SimpleDoc(stream, flavor, null);
                dpj.print(doc, null);
                return true;
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        return false;
    }